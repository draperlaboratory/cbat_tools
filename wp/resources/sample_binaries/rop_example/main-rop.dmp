
main:     file format elf64-x86-64
main
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000000840

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r--
  INTERP off    0x0000000000000238 vaddr 0x0000000000000238 paddr 0x0000000000000238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**21
         filesz 0x0000000000000bd0 memsz 0x0000000000000bd0 flags r-x
    LOAD off    0x0000000000000de0 vaddr 0x0000000000200de0 paddr 0x0000000000200de0 align 2**21
         filesz 0x0000000000000330 memsz 0x0000000000000338 flags rw-
 DYNAMIC off    0x0000000000000df0 vaddr 0x0000000000200df0 paddr 0x0000000000200df0 align 2**3
         filesz 0x00000000000001d0 memsz 0x00000000000001d0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000000254 paddr 0x0000000000000254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x0000000000000ab4 vaddr 0x0000000000000ab4 paddr 0x0000000000000ab4 align 2**2
         filesz 0x0000000000000034 memsz 0x0000000000000034 flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000de0 vaddr 0x0000000000200de0 paddr 0x0000000000200de0 align 2**0
         filesz 0x0000000000000220 memsz 0x0000000000000220 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x0000000000000800
  FINI                 0x0000000000000aa4
  INIT_ARRAY           0x0000000000200de0
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000200de8
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000298
  STRTAB               0x0000000000000348
  SYMTAB               0x00000000000002b8
  STRSZ                0x000000000000007d
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000200fc0
  RELA                 0x00000000000003f8
  RELASZ               0x0000000000000408
  RELAENT              0x0000000000000018
  TEXTREL              0x0000000000000000
  FLAGS                0x000000000000000c
  FLAGS_1              0x0000000008000001
  VERNEED              0x00000000000003d8
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x00000000000003c6
  RELACOUNT            0x0000000000000026

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000238  0000000000000238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000000254  0000000000000254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000274  0000000000000274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000000298  0000000000000298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000090  00000000000002b8  00000000000002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000007d  0000000000000348  0000000000000348  00000348  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000000c  00000000000003c6  00000000000003c6  000003c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  00000000000003d8  00000000000003d8  000003d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     00000408  00000000000003f8  00000000000003f8  000003f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .init         00000017  0000000000000800  0000000000000800  00000800  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .plt          00000010  0000000000000820  0000000000000820  00000820  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt.got      00000008  0000000000000830  0000000000000830  00000830  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         00000262  0000000000000840  0000000000000840  00000840  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000009  0000000000000aa4  0000000000000aa4  00000aa4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       00000004  0000000000000ab0  0000000000000ab0  00000ab0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 00000034  0000000000000ab4  0000000000000ab4  00000ab4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     000000e8  0000000000000ae8  0000000000000ae8  00000ae8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000008  0000000000200de0  0000000000200de0  00000de0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000008  0000000000200de8  0000000000200de8  00000de8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .dynamic      000001d0  0000000000200df0  0000000000200df0  00000df0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .got          00000040  0000000000200fc0  0000000000200fc0  00000fc0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .data         00000110  0000000000201000  0000000000201000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .bss          00000008  0000000000201110  0000000000201110  00001110  2**0
                  ALLOC
 23 .comment      0000002b  0000000000000000  0000000000000000  00001110  2**0
                  CONTENTS, READONLY
 24 .debug_aranges 00000030  0000000000000000  0000000000000000  00001140  2**4
                  CONTENTS, READONLY, DEBUGGING
 25 .debug_info   0000002e  0000000000000000  0000000000000000  00001170  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .debug_abbrev 00000014  0000000000000000  0000000000000000  0000119e  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_line   00000077  0000000000000000  0000000000000000  000011b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_str    00000047  0000000000000000  0000000000000000  00001229  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000000238 l    d  .interp	0000000000000000              .interp
0000000000000254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000000274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000000298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000000002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000000348 l    d  .dynstr	0000000000000000              .dynstr
00000000000003c6 l    d  .gnu.version	0000000000000000              .gnu.version
00000000000003d8 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
00000000000003f8 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000000800 l    d  .init	0000000000000000              .init
0000000000000820 l    d  .plt	0000000000000000              .plt
0000000000000830 l    d  .plt.got	0000000000000000              .plt.got
0000000000000840 l    d  .text	0000000000000000              .text
0000000000000aa4 l    d  .fini	0000000000000000              .fini
0000000000000ab0 l    d  .rodata	0000000000000000              .rodata
0000000000000ab4 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000000ae8 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000200de0 l    d  .init_array	0000000000000000              .init_array
0000000000200de8 l    d  .fini_array	0000000000000000              .fini_array
0000000000200df0 l    d  .dynamic	0000000000000000              .dynamic
0000000000200fc0 l    d  .got	0000000000000000              .got
0000000000201000 l    d  .data	0000000000000000              .data
0000000000201110 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000000870 l     F .text	0000000000000000              deregister_tm_clones
00000000000008b0 l     F .text	0000000000000000              register_tm_clones
0000000000000900 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000201110 l     O .bss	0000000000000001              completed.7697
0000000000200de8 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000000940 l     F .text	0000000000000000              frame_dummy
0000000000200de0 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              main.c
000000000000094a l       .text	0000000000000000              tm_test1_gadget_000005
0000000000000952 l       .text	0000000000000000              tm_test1_gadget_000006
0000000000000956 l       .text	0000000000000000              tm_test1_gadget_000007
000000000000095a l       .text	0000000000000000              tm_test1_gadget_000008
000000000000095e l       .text	0000000000000000              tm_test1_gadget_000009
0000000000000962 l       .text	0000000000000000              tm_test1_gadget_00000a
0000000000000966 l       .text	0000000000000000              tm_test1_gadget_00000b
0000000000000969 l       .text	0000000000000000              tm_test1_gadget_00000c
0000000000000971 l       .text	0000000000000000              tm_test1_gadget_00000d
0000000000201100 l       .data	0000000000000000              __main_restorex
0000000000000999 l       .text	0000000000000000              __main_restore
000000000000099e l       .text	0000000000000000              _main2
000000000000099e l       .text	0000000000000000              tm_main_gadget_000012
00000000000009a6 l       .text	0000000000000000              tm_main_gadget_000013
00000000000009aa l       .text	0000000000000000              tm_main_gadget_000014
00000000000009af l       .text	0000000000000000              tm_main_gadget_000015
00000000000009b7 l       .text	0000000000000000              tm_main_gadget_000016
00000000000009bf l       .text	0000000000000000              tm_main_gadget_000017
00000000000009c7 l       .text	0000000000000000              tm_main_gadget_000018
0000000000201088 l       .data	0000000000000000              tm_main_gadget_000018x
00000000000009cf l       .text	0000000000000000              tm_main_gadget_00001a
00000000000009d3 l       .text	0000000000000000              tm_main_gadget_00001b
00000000000009d7 l       .text	0000000000000000              tm_main_gadget_00001c
00000000000009db l       .text	0000000000000000              tm_main_gadget_00001d
00000000000009df l       .text	0000000000000000              tm_main_gadget_00001e
00000000000009e2 l       .text	0000000000000000              tm_main_gadget_00001f
00000000000009e5 l       .text	0000000000000000              tm_main_gadget_000020
00000000000009f7 l       .text	0000000000000000              tm_main_gadget_000021
00000000000009fb l       .text	0000000000000000              tm_main_gadget_000022
0000000000000a00 l       .text	0000000000000000              tm_main_gadget_000024
0000000000000a05 l       .text	0000000000000000              tm_main_gadget_000025
0000000000000a08 l       .text	0000000000000000              tm_main_gadget_000025_cndjmp
00000000002010e0 l       .data	0000000000000000              tm_main_gadget_000025x
0000000000000a10 l       .text	0000000000000000              tm_main_gadget_000026
0000000000000a14 l       .text	0000000000000000              tm_main_gadget_000027
0000000000000a1f l       .text	0000000000000000              tm_main_gadget_000028
0000000000201010 l       .data	0000000000000000              tm_test1_gadget_000005x
0000000000201018 l       .data	0000000000000000              tm_test1_gadget_000006x
0000000000201020 l       .data	0000000000000000              tm_test1_gadget_000007x
0000000000201028 l       .data	0000000000000000              tm_test1_gadget_000008x
0000000000201030 l       .data	0000000000000000              tm_test1_gadget_000009x
0000000000201038 l       .data	0000000000000000              tm_test1_gadget_00000ax
0000000000201040 l       .data	0000000000000000              tm_test1_gadget_00000bx
0000000000201048 l       .data	0000000000000000              tm_test1_gadget_00000cx
0000000000201050 l       .data	0000000000000000              tm_test1_gadget_00000dx
0000000000201058 l       .data	0000000000000000              tm_main_gadget_000012x
0000000000201060 l       .data	0000000000000000              tm_main_gadget_000013x
0000000000201068 l       .data	0000000000000000              tm_main_gadget_000014x
0000000000201070 l       .data	0000000000000000              tm_main_gadget_000015x
0000000000201078 l       .data	0000000000000000              tm_main_gadget_000016x
0000000000201080 l       .data	0000000000000000              tm_main_gadget_000017x
0000000000201090 l       .data	0000000000000000              tm_main_gadget_00001ax
0000000000201098 l       .data	0000000000000000              tm_main_gadget_00001bx
00000000002010a0 l       .data	0000000000000000              tm_main_gadget_00001cx
00000000002010a8 l       .data	0000000000000000              tm_main_gadget_00001dx
00000000002010b0 l       .data	0000000000000000              tm_main_gadget_00001ex
00000000002010b8 l       .data	0000000000000000              tm_main_gadget_00001fx
00000000002010c0 l       .data	0000000000000000              tm_main_gadget_000020x
00000000002010c8 l       .data	0000000000000000              tm_main_gadget_000021x
00000000002010d0 l       .data	0000000000000000              tm_main_gadget_000022x
00000000002010d8 l       .data	0000000000000000              tm_main_gadget_000024x
00000000002010e8 l       .data	0000000000000000              tm_main_gadget_000026x
00000000002010f0 l       .data	0000000000000000              tm_main_gadget_000027x
00000000002010f8 l       .data	0000000000000000              tm_main_gadget_000028x
0000000000201108 l       .data	0000000000000000              __main2x
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000000bcc l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000200de8 l       .init_array	0000000000000000              __init_array_end
0000000000200df0 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000200de0 l       .init_array	0000000000000000              __init_array_start
0000000000000ab4 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000200fc0 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000000aa0 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000201000  w      .data	0000000000000000              data_start
0000000000201058 g       .data	0000000000000000              test1_ropchain_end
0000000000201110 g       .data	0000000000000000              _edata
0000000000000aa4 g     F .fini	0000000000000000              _fini
000000000000094a g     F .text	000000000000002f              test1
0000000000201010 g       .data	0000000000000000              test1_ropchain_start
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000201000 g       .data	0000000000000000              __data_start
0000000000201010 g       .data	0000000000000000              rop_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000201008 g     O .data	0000000000000000              .hidden __dso_handle
0000000000000ab0 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000000a30 g     F .text	0000000000000065              __libc_csu_init
0000000000201110 g       .data	0000000000000000              main_ropchain_end
0000000000201118 g       .bss	0000000000000000              _end
0000000000000840 g     F .text	000000000000002b              _start
0000000000201110 g       .bss	0000000000000000              __bss_start
0000000000000979 g     F .text	00000000000000ae              main
0000000000201110 g       .data	0000000000000000              rop_end
0000000000201058 g       .data	0000000000000000              main_ropchain_start
0000000000201110 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
0000000000000800 g     F .init	0000000000000000              _init



Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x58b>
 248:	78 38                	js     282 <_init-0x57e>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 d9                	add    %bl,%cl
 285:	d8 33                	fdivs  (%rbx)
 287:	38 50 2f             	cmp    %dl,0x2f(%rax)
 28a:	5b                   	pop    %rbx
 28b:	24 da                	and    $0xda,%al
 28d:	68 05 42 2b c6       	pushq  $0xffffffffc62b4205
 292:	7a b6                	jp     24a <_init-0x5b6>
 294:	84 4d f1             	test   %cl,-0xf(%rbp)
 297:	d9                   	.byte 0xd9

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	38 00                	cmp    %al,(%rax)
 2d2:	00 00                	add    %al,(%rax)
 2d4:	20 00                	and    %al,(%rax)
	...
 2e6:	00 00                	add    %al,(%rax)
 2e8:	1a 00                	sbb    (%rax),%al
 2ea:	00 00                	add    %al,(%rax)
 2ec:	12 00                	adc    (%rax),%al
	...
 2fe:	00 00                	add    %al,(%rax)
 300:	54                   	push   %rsp
 301:	00 00                	add    %al,(%rax)
 303:	00 20                	add    %ah,(%rax)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 63 00             	add    %ah,0x0(%rbx)
 31a:	00 00                	add    %al,(%rax)
 31c:	20 00                	and    %al,(%rax)
	...
 32e:	00 00                	add    %al,(%rax)
 330:	0b 00                	or     (%rax),%eax
 332:	00 00                	add    %al,(%rax)
 334:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000348 <.dynstr>:
 348:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 34c:	63 2e                	movslq (%rsi),%ebp
 34e:	73 6f                	jae    3bf <_init-0x441>
 350:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 355:	63 78 61             	movslq 0x61(%rax),%edi
 358:	5f                   	pop    %rdi
 359:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 35f:	7a 65                	jp     3c6 <_init-0x43a>
 361:	00 5f 5f             	add    %bl,0x5f(%rdi)
 364:	6c                   	insb   (%dx),%es:(%rdi)
 365:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 36c:	72 74                	jb     3e2 <_init-0x41e>
 36e:	5f                   	pop    %rdi
 36f:	6d                   	insl   (%dx),%es:(%rdi)
 370:	61                   	(bad)  
 371:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 378:	43 5f                	rex.XB pop %r15
 37a:	32 2e                	xor    (%rsi),%ch
 37c:	32 2e                	xor    (%rsi),%ch
 37e:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 383:	4d 5f                	rex.WRB pop %r15
 385:	64 65 72 65          	fs gs jb 3ee <_init-0x412>
 389:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 390:	4d 
 391:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 393:	6f                   	outsl  %ds:(%rsi),(%dx)
 394:	6e                   	outsb  %ds:(%rsi),(%dx)
 395:	65 54                	gs push %rsp
 397:	61                   	(bad)  
 398:	62                   	(bad)  
 399:	6c                   	insb   (%dx),%es:(%rdi)
 39a:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 39e:	67 6d                	insl   (%dx),%es:(%edi)
 3a0:	6f                   	outsl  %ds:(%rsi),(%dx)
 3a1:	6e                   	outsb  %ds:(%rsi),(%dx)
 3a2:	5f                   	pop    %rdi
 3a3:	73 74                	jae    419 <_init-0x3e7>
 3a5:	61                   	(bad)  
 3a6:	72 74                	jb     41c <_init-0x3e4>
 3a8:	5f                   	pop    %rdi
 3a9:	5f                   	pop    %rdi
 3aa:	00 5f 49             	add    %bl,0x49(%rdi)
 3ad:	54                   	push   %rsp
 3ae:	4d 5f                	rex.WRB pop %r15
 3b0:	72 65                	jb     417 <_init-0x3e9>
 3b2:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3b9:	4d 
 3ba:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3bc:	6f                   	outsl  %ds:(%rsi),(%dx)
 3bd:	6e                   	outsb  %ds:(%rsi),(%dx)
 3be:	65 54                	gs push %rsp
 3c0:	61                   	(bad)  
 3c1:	62                   	.byte 0x62
 3c2:	6c                   	insb   (%dx),%es:(%rdi)
 3c3:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000003c6 <.gnu.version>:
 3c6:	00 00                	add    %al,(%rax)
 3c8:	00 00                	add    %al,(%rax)
 3ca:	02 00                	add    (%rax),%al
 3cc:	00 00                	add    %al,(%rax)
 3ce:	00 00                	add    %al,(%rax)
 3d0:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

00000000000003d8 <.gnu.version_r>:
 3d8:	01 00                	add    %eax,(%rax)
 3da:	01 00                	add    %eax,(%rax)
 3dc:	01 00                	add    %eax,(%rax)
 3de:	00 00                	add    %al,(%rax)
 3e0:	10 00                	adc    %al,(%rax)
 3e2:	00 00                	add    %al,(%rax)
 3e4:	00 00                	add    %al,(%rax)
 3e6:	00 00                	add    %al,(%rax)
 3e8:	75 1a                	jne    404 <_init-0x3fc>
 3ea:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 3f0:	2c 00                	sub    $0x0,%al
 3f2:	00 00                	add    %al,(%rax)
 3f4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000003f8 <.rela.dyn>:
 3f8:	83 09 00             	orl    $0x0,(%rcx)
 3fb:	00 00                	add    %al,(%rax)
 3fd:	00 00                	add    %al,(%rax)
 3ff:	00 08                	add    %cl,(%rax)
	...
 409:	11 20                	adc    %esp,(%rax)
 40b:	00 00                	add    %al,(%rax)
 40d:	00 00                	add    %al,(%rax)
 40f:	00 90 09 00 00 00    	add    %dl,0x9(%rax)
 415:	00 00                	add    %al,(%rax)
 417:	00 08                	add    %cl,(%rax)
 419:	00 00                	add    %al,(%rax)
 41b:	00 00                	add    %al,(%rax)
 41d:	00 00                	add    %al,(%rax)
 41f:	00 58 10             	add    %bl,0x10(%rax)
 422:	20 00                	and    %al,(%rax)
 424:	00 00                	add    %al,(%rax)
 426:	00 00                	add    %al,(%rax)
 428:	ee                   	out    %al,(%dx)
 429:	09 00                	or     %eax,(%rax)
 42b:	00 00                	add    %al,(%rax)
 42d:	00 00                	add    %al,(%rax)
 42f:	00 08                	add    %cl,(%rax)
 431:	00 00                	add    %al,(%rax)
 433:	00 00                	add    %al,(%rax)
 435:	00 00                	add    %al,(%rax)
 437:	00 10                	add    %dl,(%rax)
 439:	10 20                	adc    %ah,(%rax)
 43b:	00 00                	add    %al,(%rax)
 43d:	00 00                	add    %al,(%rax)
 43f:	00 e0                	add    %ah,%al
 441:	0d 20 00 00 00       	or     $0x20,%eax
 446:	00 00                	add    %al,(%rax)
 448:	08 00                	or     %al,(%rax)
 44a:	00 00                	add    %al,(%rax)
 44c:	00 00                	add    %al,(%rax)
 44e:	00 00                	add    %al,(%rax)
 450:	40 09 00             	rex or %eax,(%rax)
 453:	00 00                	add    %al,(%rax)
 455:	00 00                	add    %al,(%rax)
 457:	00 e8                	add    %ch,%al
 459:	0d 20 00 00 00       	or     $0x20,%eax
 45e:	00 00                	add    %al,(%rax)
 460:	08 00                	or     %al,(%rax)
 462:	00 00                	add    %al,(%rax)
 464:	00 00                	add    %al,(%rax)
 466:	00 00                	add    %al,(%rax)
 468:	00 09                	add    %cl,(%rcx)
 46a:	00 00                	add    %al,(%rax)
 46c:	00 00                	add    %al,(%rax)
 46e:	00 00                	add    %al,(%rax)
 470:	08 10                	or     %dl,(%rax)
 472:	20 00                	and    %al,(%rax)
 474:	00 00                	add    %al,(%rax)
 476:	00 00                	add    %al,(%rax)
 478:	08 00                	or     %al,(%rax)
 47a:	00 00                	add    %al,(%rax)
 47c:	00 00                	add    %al,(%rax)
 47e:	00 00                	add    %al,(%rax)
 480:	08 10                	or     %dl,(%rax)
 482:	20 00                	and    %al,(%rax)
 484:	00 00                	add    %al,(%rax)
 486:	00 00                	add    %al,(%rax)
 488:	10 10                	adc    %dl,(%rax)
 48a:	20 00                	and    %al,(%rax)
 48c:	00 00                	add    %al,(%rax)
 48e:	00 00                	add    %al,(%rax)
 490:	08 00                	or     %al,(%rax)
 492:	00 00                	add    %al,(%rax)
 494:	00 00                	add    %al,(%rax)
 496:	00 00                	add    %al,(%rax)
 498:	4a 09 00             	rex.WX or %rax,(%rax)
 49b:	00 00                	add    %al,(%rax)
 49d:	00 00                	add    %al,(%rax)
 49f:	00 18                	add    %bl,(%rax)
 4a1:	10 20                	adc    %ah,(%rax)
 4a3:	00 00                	add    %al,(%rax)
 4a5:	00 00                	add    %al,(%rax)
 4a7:	00 08                	add    %cl,(%rax)
 4a9:	00 00                	add    %al,(%rax)
 4ab:	00 00                	add    %al,(%rax)
 4ad:	00 00                	add    %al,(%rax)
 4af:	00 52 09             	add    %dl,0x9(%rdx)
 4b2:	00 00                	add    %al,(%rax)
 4b4:	00 00                	add    %al,(%rax)
 4b6:	00 00                	add    %al,(%rax)
 4b8:	20 10                	and    %dl,(%rax)
 4ba:	20 00                	and    %al,(%rax)
 4bc:	00 00                	add    %al,(%rax)
 4be:	00 00                	add    %al,(%rax)
 4c0:	08 00                	or     %al,(%rax)
 4c2:	00 00                	add    %al,(%rax)
 4c4:	00 00                	add    %al,(%rax)
 4c6:	00 00                	add    %al,(%rax)
 4c8:	56                   	push   %rsi
 4c9:	09 00                	or     %eax,(%rax)
 4cb:	00 00                	add    %al,(%rax)
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 28                	add    %ch,(%rax)
 4d1:	10 20                	adc    %ah,(%rax)
 4d3:	00 00                	add    %al,(%rax)
 4d5:	00 00                	add    %al,(%rax)
 4d7:	00 08                	add    %cl,(%rax)
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 00                	add    %al,(%rax)
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 5a 09             	add    %bl,0x9(%rdx)
 4e2:	00 00                	add    %al,(%rax)
 4e4:	00 00                	add    %al,(%rax)
 4e6:	00 00                	add    %al,(%rax)
 4e8:	30 10                	xor    %dl,(%rax)
 4ea:	20 00                	and    %al,(%rax)
 4ec:	00 00                	add    %al,(%rax)
 4ee:	00 00                	add    %al,(%rax)
 4f0:	08 00                	or     %al,(%rax)
 4f2:	00 00                	add    %al,(%rax)
 4f4:	00 00                	add    %al,(%rax)
 4f6:	00 00                	add    %al,(%rax)
 4f8:	5e                   	pop    %rsi
 4f9:	09 00                	or     %eax,(%rax)
 4fb:	00 00                	add    %al,(%rax)
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 38                	add    %bh,(%rax)
 501:	10 20                	adc    %ah,(%rax)
 503:	00 00                	add    %al,(%rax)
 505:	00 00                	add    %al,(%rax)
 507:	00 08                	add    %cl,(%rax)
 509:	00 00                	add    %al,(%rax)
 50b:	00 00                	add    %al,(%rax)
 50d:	00 00                	add    %al,(%rax)
 50f:	00 62 09             	add    %ah,0x9(%rdx)
 512:	00 00                	add    %al,(%rax)
 514:	00 00                	add    %al,(%rax)
 516:	00 00                	add    %al,(%rax)
 518:	40 10 20             	adc    %spl,(%rax)
 51b:	00 00                	add    %al,(%rax)
 51d:	00 00                	add    %al,(%rax)
 51f:	00 08                	add    %cl,(%rax)
 521:	00 00                	add    %al,(%rax)
 523:	00 00                	add    %al,(%rax)
 525:	00 00                	add    %al,(%rax)
 527:	00 66 09             	add    %ah,0x9(%rsi)
 52a:	00 00                	add    %al,(%rax)
 52c:	00 00                	add    %al,(%rax)
 52e:	00 00                	add    %al,(%rax)
 530:	48 10 20             	rex.W adc %spl,(%rax)
 533:	00 00                	add    %al,(%rax)
 535:	00 00                	add    %al,(%rax)
 537:	00 08                	add    %cl,(%rax)
 539:	00 00                	add    %al,(%rax)
 53b:	00 00                	add    %al,(%rax)
 53d:	00 00                	add    %al,(%rax)
 53f:	00 69 09             	add    %ch,0x9(%rcx)
 542:	00 00                	add    %al,(%rax)
 544:	00 00                	add    %al,(%rax)
 546:	00 00                	add    %al,(%rax)
 548:	50                   	push   %rax
 549:	10 20                	adc    %ah,(%rax)
 54b:	00 00                	add    %al,(%rax)
 54d:	00 00                	add    %al,(%rax)
 54f:	00 08                	add    %cl,(%rax)
 551:	00 00                	add    %al,(%rax)
 553:	00 00                	add    %al,(%rax)
 555:	00 00                	add    %al,(%rax)
 557:	00 71 09             	add    %dh,0x9(%rcx)
 55a:	00 00                	add    %al,(%rax)
 55c:	00 00                	add    %al,(%rax)
 55e:	00 00                	add    %al,(%rax)
 560:	58                   	pop    %rax
 561:	10 20                	adc    %ah,(%rax)
 563:	00 00                	add    %al,(%rax)
 565:	00 00                	add    %al,(%rax)
 567:	00 08                	add    %cl,(%rax)
 569:	00 00                	add    %al,(%rax)
 56b:	00 00                	add    %al,(%rax)
 56d:	00 00                	add    %al,(%rax)
 56f:	00 9e 09 00 00 00    	add    %bl,0x9(%rsi)
 575:	00 00                	add    %al,(%rax)
 577:	00 60 10             	add    %ah,0x10(%rax)
 57a:	20 00                	and    %al,(%rax)
 57c:	00 00                	add    %al,(%rax)
 57e:	00 00                	add    %al,(%rax)
 580:	08 00                	or     %al,(%rax)
 582:	00 00                	add    %al,(%rax)
 584:	00 00                	add    %al,(%rax)
 586:	00 00                	add    %al,(%rax)
 588:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 589:	09 00                	or     %eax,(%rax)
 58b:	00 00                	add    %al,(%rax)
 58d:	00 00                	add    %al,(%rax)
 58f:	00 68 10             	add    %ch,0x10(%rax)
 592:	20 00                	and    %al,(%rax)
 594:	00 00                	add    %al,(%rax)
 596:	00 00                	add    %al,(%rax)
 598:	08 00                	or     %al,(%rax)
 59a:	00 00                	add    %al,(%rax)
 59c:	00 00                	add    %al,(%rax)
 59e:	00 00                	add    %al,(%rax)
 5a0:	aa                   	stos   %al,%es:(%rdi)
 5a1:	09 00                	or     %eax,(%rax)
 5a3:	00 00                	add    %al,(%rax)
 5a5:	00 00                	add    %al,(%rax)
 5a7:	00 70 10             	add    %dh,0x10(%rax)
 5aa:	20 00                	and    %al,(%rax)
 5ac:	00 00                	add    %al,(%rax)
 5ae:	00 00                	add    %al,(%rax)
 5b0:	08 00                	or     %al,(%rax)
 5b2:	00 00                	add    %al,(%rax)
 5b4:	00 00                	add    %al,(%rax)
 5b6:	00 00                	add    %al,(%rax)
 5b8:	af                   	scas   %es:(%rdi),%eax
 5b9:	09 00                	or     %eax,(%rax)
 5bb:	00 00                	add    %al,(%rax)
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 78 10             	add    %bh,0x10(%rax)
 5c2:	20 00                	and    %al,(%rax)
 5c4:	00 00                	add    %al,(%rax)
 5c6:	00 00                	add    %al,(%rax)
 5c8:	08 00                	or     %al,(%rax)
 5ca:	00 00                	add    %al,(%rax)
 5cc:	00 00                	add    %al,(%rax)
 5ce:	00 00                	add    %al,(%rax)
 5d0:	b7 09                	mov    $0x9,%bh
 5d2:	00 00                	add    %al,(%rax)
 5d4:	00 00                	add    %al,(%rax)
 5d6:	00 00                	add    %al,(%rax)
 5d8:	80 10 20             	adcb   $0x20,(%rax)
 5db:	00 00                	add    %al,(%rax)
 5dd:	00 00                	add    %al,(%rax)
 5df:	00 08                	add    %cl,(%rax)
 5e1:	00 00                	add    %al,(%rax)
 5e3:	00 00                	add    %al,(%rax)
 5e5:	00 00                	add    %al,(%rax)
 5e7:	00 bf 09 00 00 00    	add    %bh,0x9(%rdi)
 5ed:	00 00                	add    %al,(%rax)
 5ef:	00 88 10 20 00 00    	add    %cl,0x2010(%rax)
 5f5:	00 00                	add    %al,(%rax)
 5f7:	00 08                	add    %cl,(%rax)
 5f9:	00 00                	add    %al,(%rax)
 5fb:	00 00                	add    %al,(%rax)
 5fd:	00 00                	add    %al,(%rax)
 5ff:	00 c7                	add    %al,%bh
 601:	09 00                	or     %eax,(%rax)
 603:	00 00                	add    %al,(%rax)
 605:	00 00                	add    %al,(%rax)
 607:	00 90 10 20 00 00    	add    %dl,0x2010(%rax)
 60d:	00 00                	add    %al,(%rax)
 60f:	00 08                	add    %cl,(%rax)
 611:	00 00                	add    %al,(%rax)
 613:	00 00                	add    %al,(%rax)
 615:	00 00                	add    %al,(%rax)
 617:	00 cf                	add    %cl,%bh
 619:	09 00                	or     %eax,(%rax)
 61b:	00 00                	add    %al,(%rax)
 61d:	00 00                	add    %al,(%rax)
 61f:	00 98 10 20 00 00    	add    %bl,0x2010(%rax)
 625:	00 00                	add    %al,(%rax)
 627:	00 08                	add    %cl,(%rax)
 629:	00 00                	add    %al,(%rax)
 62b:	00 00                	add    %al,(%rax)
 62d:	00 00                	add    %al,(%rax)
 62f:	00 d3                	add    %dl,%bl
 631:	09 00                	or     %eax,(%rax)
 633:	00 00                	add    %al,(%rax)
 635:	00 00                	add    %al,(%rax)
 637:	00 a0 10 20 00 00    	add    %ah,0x2010(%rax)
 63d:	00 00                	add    %al,(%rax)
 63f:	00 08                	add    %cl,(%rax)
 641:	00 00                	add    %al,(%rax)
 643:	00 00                	add    %al,(%rax)
 645:	00 00                	add    %al,(%rax)
 647:	00 d7                	add    %dl,%bh
 649:	09 00                	or     %eax,(%rax)
 64b:	00 00                	add    %al,(%rax)
 64d:	00 00                	add    %al,(%rax)
 64f:	00 a8 10 20 00 00    	add    %ch,0x2010(%rax)
 655:	00 00                	add    %al,(%rax)
 657:	00 08                	add    %cl,(%rax)
 659:	00 00                	add    %al,(%rax)
 65b:	00 00                	add    %al,(%rax)
 65d:	00 00                	add    %al,(%rax)
 65f:	00 db                	add    %bl,%bl
 661:	09 00                	or     %eax,(%rax)
 663:	00 00                	add    %al,(%rax)
 665:	00 00                	add    %al,(%rax)
 667:	00 b0 10 20 00 00    	add    %dh,0x2010(%rax)
 66d:	00 00                	add    %al,(%rax)
 66f:	00 08                	add    %cl,(%rax)
 671:	00 00                	add    %al,(%rax)
 673:	00 00                	add    %al,(%rax)
 675:	00 00                	add    %al,(%rax)
 677:	00 df                	add    %bl,%bh
 679:	09 00                	or     %eax,(%rax)
 67b:	00 00                	add    %al,(%rax)
 67d:	00 00                	add    %al,(%rax)
 67f:	00 b8 10 20 00 00    	add    %bh,0x2010(%rax)
 685:	00 00                	add    %al,(%rax)
 687:	00 08                	add    %cl,(%rax)
 689:	00 00                	add    %al,(%rax)
 68b:	00 00                	add    %al,(%rax)
 68d:	00 00                	add    %al,(%rax)
 68f:	00 e2                	add    %ah,%dl
 691:	09 00                	or     %eax,(%rax)
 693:	00 00                	add    %al,(%rax)
 695:	00 00                	add    %al,(%rax)
 697:	00 c0                	add    %al,%al
 699:	10 20                	adc    %ah,(%rax)
 69b:	00 00                	add    %al,(%rax)
 69d:	00 00                	add    %al,(%rax)
 69f:	00 08                	add    %cl,(%rax)
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 00                	add    %al,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 e5                	add    %ah,%ch
 6a9:	09 00                	or     %eax,(%rax)
 6ab:	00 00                	add    %al,(%rax)
 6ad:	00 00                	add    %al,(%rax)
 6af:	00 c8                	add    %cl,%al
 6b1:	10 20                	adc    %ah,(%rax)
 6b3:	00 00                	add    %al,(%rax)
 6b5:	00 00                	add    %al,(%rax)
 6b7:	00 08                	add    %cl,(%rax)
 6b9:	00 00                	add    %al,(%rax)
 6bb:	00 00                	add    %al,(%rax)
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 f7                	add    %dh,%bh
 6c1:	09 00                	or     %eax,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 d0                	add    %dl,%al
 6c9:	10 20                	adc    %ah,(%rax)
 6cb:	00 00                	add    %al,(%rax)
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 08                	add    %cl,(%rax)
 6d1:	00 00                	add    %al,(%rax)
 6d3:	00 00                	add    %al,(%rax)
 6d5:	00 00                	add    %al,(%rax)
 6d7:	00 fb                	add    %bh,%bl
 6d9:	09 00                	or     %eax,(%rax)
 6db:	00 00                	add    %al,(%rax)
 6dd:	00 00                	add    %al,(%rax)
 6df:	00 d8                	add    %bl,%al
 6e1:	10 20                	adc    %ah,(%rax)
 6e3:	00 00                	add    %al,(%rax)
 6e5:	00 00                	add    %al,(%rax)
 6e7:	00 08                	add    %cl,(%rax)
	...
 6f1:	0a 00                	or     (%rax),%al
 6f3:	00 00                	add    %al,(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 e0                	add    %ah,%al
 6f9:	10 20                	adc    %ah,(%rax)
 6fb:	00 00                	add    %al,(%rax)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 08                	add    %cl,(%rax)
 701:	00 00                	add    %al,(%rax)
 703:	00 00                	add    %al,(%rax)
 705:	00 00                	add    %al,(%rax)
 707:	00 05 0a 00 00 00    	add    %al,0xa(%rip)        # 717 <_init-0xe9>
 70d:	00 00                	add    %al,(%rax)
 70f:	00 e8                	add    %ch,%al
 711:	10 20                	adc    %ah,(%rax)
 713:	00 00                	add    %al,(%rax)
 715:	00 00                	add    %al,(%rax)
 717:	00 08                	add    %cl,(%rax)
 719:	00 00                	add    %al,(%rax)
 71b:	00 00                	add    %al,(%rax)
 71d:	00 00                	add    %al,(%rax)
 71f:	00 10                	add    %dl,(%rax)
 721:	0a 00                	or     (%rax),%al
 723:	00 00                	add    %al,(%rax)
 725:	00 00                	add    %al,(%rax)
 727:	00 f0                	add    %dh,%al
 729:	10 20                	adc    %ah,(%rax)
 72b:	00 00                	add    %al,(%rax)
 72d:	00 00                	add    %al,(%rax)
 72f:	00 08                	add    %cl,(%rax)
 731:	00 00                	add    %al,(%rax)
 733:	00 00                	add    %al,(%rax)
 735:	00 00                	add    %al,(%rax)
 737:	00 14 0a             	add    %dl,(%rdx,%rcx,1)
 73a:	00 00                	add    %al,(%rax)
 73c:	00 00                	add    %al,(%rax)
 73e:	00 00                	add    %al,(%rax)
 740:	f8                   	clc    
 741:	10 20                	adc    %ah,(%rax)
 743:	00 00                	add    %al,(%rax)
 745:	00 00                	add    %al,(%rax)
 747:	00 08                	add    %cl,(%rax)
 749:	00 00                	add    %al,(%rax)
 74b:	00 00                	add    %al,(%rax)
 74d:	00 00                	add    %al,(%rax)
 74f:	00 1f                	add    %bl,(%rdi)
 751:	0a 00                	or     (%rax),%al
 753:	00 00                	add    %al,(%rax)
 755:	00 00                	add    %al,(%rax)
 757:	00 00                	add    %al,(%rax)
 759:	11 20                	adc    %esp,(%rax)
 75b:	00 00                	add    %al,(%rax)
 75d:	00 00                	add    %al,(%rax)
 75f:	00 08                	add    %cl,(%rax)
 761:	00 00                	add    %al,(%rax)
 763:	00 00                	add    %al,(%rax)
 765:	00 00                	add    %al,(%rax)
 767:	00 99 09 00 00 00    	add    %bl,0x9(%rcx)
 76d:	00 00                	add    %al,(%rax)
 76f:	00 08                	add    %cl,(%rax)
 771:	11 20                	adc    %esp,(%rax)
 773:	00 00                	add    %al,(%rax)
 775:	00 00                	add    %al,(%rax)
 777:	00 08                	add    %cl,(%rax)
 779:	00 00                	add    %al,(%rax)
 77b:	00 00                	add    %al,(%rax)
 77d:	00 00                	add    %al,(%rax)
 77f:	00 9e 09 00 00 00    	add    %bl,0x9(%rsi)
 785:	00 00                	add    %al,(%rax)
 787:	00 d8                	add    %bl,%al
 789:	0f 20 00             	mov    %cr0,%rax
 78c:	00 00                	add    %al,(%rax)
 78e:	00 00                	add    %al,(%rax)
 790:	06                   	(bad)  
 791:	00 00                	add    %al,(%rax)
 793:	00 01                	add    %al,(%rcx)
	...
 79d:	00 00                	add    %al,(%rax)
 79f:	00 e0                	add    %ah,%al
 7a1:	0f 20 00             	mov    %cr0,%rax
 7a4:	00 00                	add    %al,(%rax)
 7a6:	00 00                	add    %al,(%rax)
 7a8:	06                   	(bad)  
 7a9:	00 00                	add    %al,(%rax)
 7ab:	00 02                	add    %al,(%rdx)
	...
 7b5:	00 00                	add    %al,(%rax)
 7b7:	00 e8                	add    %ch,%al
 7b9:	0f 20 00             	mov    %cr0,%rax
 7bc:	00 00                	add    %al,(%rax)
 7be:	00 00                	add    %al,(%rax)
 7c0:	06                   	(bad)  
 7c1:	00 00                	add    %al,(%rax)
 7c3:	00 03                	add    %al,(%rbx)
	...
 7cd:	00 00                	add    %al,(%rax)
 7cf:	00 f0                	add    %dh,%al
 7d1:	0f 20 00             	mov    %cr0,%rax
 7d4:	00 00                	add    %al,(%rax)
 7d6:	00 00                	add    %al,(%rax)
 7d8:	06                   	(bad)  
 7d9:	00 00                	add    %al,(%rax)
 7db:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 7e6:	00 00                	add    %al,(%rax)
 7e8:	f8                   	clc    
 7e9:	0f 20 00             	mov    %cr0,%rax
 7ec:	00 00                	add    %al,(%rax)
 7ee:	00 00                	add    %al,(%rax)
 7f0:	06                   	(bad)  
 7f1:	00 00                	add    %al,(%rax)
 7f3:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 7f9 <_init-0x7>
 7f9:	00 00                	add    %al,(%rax)
 7fb:	00 00                	add    %al,(%rax)
 7fd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

0000000000000800 <_init>:
 800:	48 83 ec 08          	sub    $0x8,%rsp
 804:	48 8b 05 dd 07 20 00 	mov    0x2007dd(%rip),%rax        # 200fe8 <__gmon_start__>
 80b:	48 85 c0             	test   %rax,%rax
 80e:	74 02                	je     812 <_init+0x12>
 810:	ff d0                	callq  *%rax
 812:	48 83 c4 08          	add    $0x8,%rsp
 816:	c3                   	retq   

Disassembly of section .plt:

0000000000000820 <.plt>:
 820:	ff 35 a2 07 20 00    	pushq  0x2007a2(%rip)        # 200fc8 <_GLOBAL_OFFSET_TABLE_+0x8>
 826:	ff 25 a4 07 20 00    	jmpq   *0x2007a4(%rip)        # 200fd0 <_GLOBAL_OFFSET_TABLE_+0x10>
 82c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000000830 <__cxa_finalize@plt>:
 830:	ff 25 c2 07 20 00    	jmpq   *0x2007c2(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 836:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000840 <_start>:
 840:	31 ed                	xor    %ebp,%ebp
 842:	49 89 d1             	mov    %rdx,%r9
 845:	5e                   	pop    %rsi
 846:	48 89 e2             	mov    %rsp,%rdx
 849:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 84d:	50                   	push   %rax
 84e:	54                   	push   %rsp
 84f:	4c 8d 05 4a 02 00 00 	lea    0x24a(%rip),%r8        # aa0 <__libc_csu_fini>
 856:	48 8d 0d d3 01 00 00 	lea    0x1d3(%rip),%rcx        # a30 <__libc_csu_init>
 85d:	48 8d 3d 15 01 00 00 	lea    0x115(%rip),%rdi        # 979 <main>
 864:	ff 15 76 07 20 00    	callq  *0x200776(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 86a:	f4                   	hlt    
 86b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000870 <deregister_tm_clones>:
 870:	48 8d 3d 99 08 20 00 	lea    0x200899(%rip),%rdi        # 201110 <__TMC_END__>
 877:	55                   	push   %rbp
 878:	48 8d 05 91 08 20 00 	lea    0x200891(%rip),%rax        # 201110 <__TMC_END__>
 87f:	48 39 f8             	cmp    %rdi,%rax
 882:	48 89 e5             	mov    %rsp,%rbp
 885:	74 19                	je     8a0 <deregister_tm_clones+0x30>
 887:	48 8b 05 4a 07 20 00 	mov    0x20074a(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 88e:	48 85 c0             	test   %rax,%rax
 891:	74 0d                	je     8a0 <deregister_tm_clones+0x30>
 893:	5d                   	pop    %rbp
 894:	ff e0                	jmpq   *%rax
 896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 89d:	00 00 00 
 8a0:	5d                   	pop    %rbp
 8a1:	c3                   	retq   
 8a2:	0f 1f 40 00          	nopl   0x0(%rax)
 8a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 8ad:	00 00 00 

00000000000008b0 <register_tm_clones>:
 8b0:	48 8d 3d 59 08 20 00 	lea    0x200859(%rip),%rdi        # 201110 <__TMC_END__>
 8b7:	48 8d 35 52 08 20 00 	lea    0x200852(%rip),%rsi        # 201110 <__TMC_END__>
 8be:	55                   	push   %rbp
 8bf:	48 29 fe             	sub    %rdi,%rsi
 8c2:	48 89 e5             	mov    %rsp,%rbp
 8c5:	48 c1 fe 03          	sar    $0x3,%rsi
 8c9:	48 89 f0             	mov    %rsi,%rax
 8cc:	48 c1 e8 3f          	shr    $0x3f,%rax
 8d0:	48 01 c6             	add    %rax,%rsi
 8d3:	48 d1 fe             	sar    %rsi
 8d6:	74 18                	je     8f0 <register_tm_clones+0x40>
 8d8:	48 8b 05 11 07 20 00 	mov    0x200711(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 8df:	48 85 c0             	test   %rax,%rax
 8e2:	74 0c                	je     8f0 <register_tm_clones+0x40>
 8e4:	5d                   	pop    %rbp
 8e5:	ff e0                	jmpq   *%rax
 8e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 8ee:	00 00 
 8f0:	5d                   	pop    %rbp
 8f1:	c3                   	retq   
 8f2:	0f 1f 40 00          	nopl   0x0(%rax)
 8f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 8fd:	00 00 00 

0000000000000900 <__do_global_dtors_aux>:
 900:	80 3d 09 08 20 00 00 	cmpb   $0x0,0x200809(%rip)        # 201110 <__TMC_END__>
 907:	75 2f                	jne    938 <__do_global_dtors_aux+0x38>
 909:	48 83 3d e7 06 20 00 	cmpq   $0x0,0x2006e7(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 910:	00 
 911:	55                   	push   %rbp
 912:	48 89 e5             	mov    %rsp,%rbp
 915:	74 0c                	je     923 <__do_global_dtors_aux+0x23>
 917:	48 8b 3d ea 06 20 00 	mov    0x2006ea(%rip),%rdi        # 201008 <__dso_handle>
 91e:	e8 0d ff ff ff       	callq  830 <__cxa_finalize@plt>
 923:	e8 48 ff ff ff       	callq  870 <deregister_tm_clones>
 928:	c6 05 e1 07 20 00 01 	movb   $0x1,0x2007e1(%rip)        # 201110 <__TMC_END__>
 92f:	5d                   	pop    %rbp
 930:	c3                   	retq   
 931:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 938:	f3 c3                	repz retq 
 93a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000940 <frame_dummy>:
 940:	55                   	push   %rbp
 941:	48 89 e5             	mov    %rsp,%rbp
 944:	5d                   	pop    %rbp
 945:	e9 66 ff ff ff       	jmpq   8b0 <register_tm_clones>

000000000000094a <test1>:
 94a:	49 83 ef 08          	sub    $0x8,%r15
 94e:	49 89 2f             	mov    %rbp,(%r15)
 951:	c3                   	retq   

0000000000000952 <tm_test1_gadget_000006>:
 952:	4c 89 fd             	mov    %r15,%rbp
 955:	c3                   	retq   

0000000000000956 <tm_test1_gadget_000007>:
 956:	89 7d fc             	mov    %edi,-0x4(%rbp)
 959:	c3                   	retq   

000000000000095a <tm_test1_gadget_000008>:
 95a:	89 75 f8             	mov    %esi,-0x8(%rbp)
 95d:	c3                   	retq   

000000000000095e <tm_test1_gadget_000009>:
 95e:	8b 55 fc             	mov    -0x4(%rbp),%edx
 961:	c3                   	retq   

0000000000000962 <tm_test1_gadget_00000a>:
 962:	8b 45 f8             	mov    -0x8(%rbp),%eax
 965:	c3                   	retq   

0000000000000966 <tm_test1_gadget_00000b>:
 966:	01 d0                	add    %edx,%eax
 968:	c3                   	retq   

0000000000000969 <tm_test1_gadget_00000c>:
 969:	49 8b 2f             	mov    (%r15),%rbp
 96c:	49 83 c7 08          	add    $0x8,%r15
 970:	c3                   	retq   

0000000000000971 <tm_test1_gadget_00000d>:
 971:	49 8b 27             	mov    (%r15),%rsp
 974:	49 83 c7 08          	add    $0x8,%r15
 978:	c3                   	retq   

0000000000000979 <main>:
 979:	55                   	push   %rbp
 97a:	49 89 e7             	mov    %rsp,%r15
 97d:	49 83 ef 08          	sub    $0x8,%r15
 981:	48 bc 00 11 20 00 00 	movabs $0x201100,%rsp
 988:	00 00 00 
 98b:	49 89 27             	mov    %rsp,(%r15)
 98e:	48 bc 58 10 20 00 00 	movabs $0x201058,%rsp
 995:	00 00 00 
 998:	c3                   	retq   

0000000000000999 <__main_restore>:
 999:	4c 89 fc             	mov    %r15,%rsp
 99c:	5d                   	pop    %rbp
 99d:	c3                   	retq   

000000000000099e <_main2>:
 99e:	49 83 ef 08          	sub    $0x8,%r15
 9a2:	49 89 2f             	mov    %rbp,(%r15)
 9a5:	c3                   	retq   

00000000000009a6 <tm_main_gadget_000013>:
 9a6:	4c 89 fd             	mov    %r15,%rbp
 9a9:	c3                   	retq   

00000000000009aa <tm_main_gadget_000014>:
 9aa:	49 83 ef 10          	sub    $0x10,%r15
 9ae:	c3                   	retq   

00000000000009af <tm_main_gadget_000015>:
 9af:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 9b6:	c3                   	retq   

00000000000009b7 <tm_main_gadget_000016>:
 9b7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 9be:	c3                   	retq   

00000000000009bf <tm_main_gadget_000017>:
 9bf:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 9c6:	c3                   	retq   

00000000000009c7 <tm_main_gadget_000018>:
 9c7:	48 81 c4 48 00 00 00 	add    $0x48,%rsp
 9ce:	c3                   	retq   

00000000000009cf <tm_main_gadget_00001a>:
 9cf:	8b 45 f8             	mov    -0x8(%rbp),%eax
 9d2:	c3                   	retq   

00000000000009d3 <tm_main_gadget_00001b>:
 9d3:	8d 50 01             	lea    0x1(%rax),%edx
 9d6:	c3                   	retq   

00000000000009d7 <tm_main_gadget_00001c>:
 9d7:	89 55 f8             	mov    %edx,-0x8(%rbp)
 9da:	c3                   	retq   

00000000000009db <tm_main_gadget_00001d>:
 9db:	8b 55 f8             	mov    -0x8(%rbp),%edx
 9de:	c3                   	retq   

00000000000009df <tm_main_gadget_00001e>:
 9df:	89 c6                	mov    %eax,%esi
 9e1:	c3                   	retq   

00000000000009e2 <tm_main_gadget_00001f>:
 9e2:	89 d7                	mov    %edx,%edi
 9e4:	c3                   	retq   

00000000000009e5 <tm_main_gadget_000020>:
 9e5:	49 83 ef 08          	sub    $0x8,%r15
 9e9:	49 89 27             	mov    %rsp,(%r15)
 9ec:	48 bc 10 10 20 00 00 	movabs $0x201010,%rsp
 9f3:	00 00 00 
 9f6:	c3                   	retq   

00000000000009f7 <tm_main_gadget_000021>:
 9f7:	01 45 fc             	add    %eax,-0x4(%rbp)
 9fa:	c3                   	retq   

00000000000009fb <tm_main_gadget_000022>:
 9fb:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
 9ff:	c3                   	retq   

0000000000000a00 <tm_main_gadget_000024>:
 a00:	83 7d f8 09          	cmpl   $0x9,-0x8(%rbp)
 a04:	c3                   	retq   

0000000000000a05 <tm_main_gadget_000025>:
 a05:	7e 01                	jle    a08 <tm_main_gadget_000025_cndjmp>
 a07:	c3                   	retq   

0000000000000a08 <tm_main_gadget_000025_cndjmp>:
 a08:	48 81 c4 a8 ff ff ff 	add    $0xffffffffffffffa8,%rsp
 a0f:	c3                   	retq   

0000000000000a10 <tm_main_gadget_000026>:
 a10:	8b 45 fc             	mov    -0x4(%rbp),%eax
 a13:	c3                   	retq   

0000000000000a14 <tm_main_gadget_000027>:
 a14:	49 89 ef             	mov    %rbp,%r15
 a17:	49 8b 2f             	mov    (%r15),%rbp
 a1a:	49 83 c7 08          	add    $0x8,%r15
 a1e:	c3                   	retq   

0000000000000a1f <tm_main_gadget_000028>:
 a1f:	49 8b 27             	mov    (%r15),%rsp
 a22:	49 83 c7 08          	add    $0x8,%r15
 a26:	c3                   	retq   
 a27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 a2e:	00 00 

0000000000000a30 <__libc_csu_init>:
 a30:	41 57                	push   %r15
 a32:	41 56                	push   %r14
 a34:	49 89 d7             	mov    %rdx,%r15
 a37:	41 55                	push   %r13
 a39:	41 54                	push   %r12
 a3b:	4c 8d 25 9e 03 20 00 	lea    0x20039e(%rip),%r12        # 200de0 <__frame_dummy_init_array_entry>
 a42:	55                   	push   %rbp
 a43:	48 8d 2d 9e 03 20 00 	lea    0x20039e(%rip),%rbp        # 200de8 <__init_array_end>
 a4a:	53                   	push   %rbx
 a4b:	41 89 fd             	mov    %edi,%r13d
 a4e:	49 89 f6             	mov    %rsi,%r14
 a51:	4c 29 e5             	sub    %r12,%rbp
 a54:	48 83 ec 08          	sub    $0x8,%rsp
 a58:	48 c1 fd 03          	sar    $0x3,%rbp
 a5c:	e8 9f fd ff ff       	callq  800 <_init>
 a61:	48 85 ed             	test   %rbp,%rbp
 a64:	74 20                	je     a86 <__libc_csu_init+0x56>
 a66:	31 db                	xor    %ebx,%ebx
 a68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 a6f:	00 
 a70:	4c 89 fa             	mov    %r15,%rdx
 a73:	4c 89 f6             	mov    %r14,%rsi
 a76:	44 89 ef             	mov    %r13d,%edi
 a79:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 a7d:	48 83 c3 01          	add    $0x1,%rbx
 a81:	48 39 dd             	cmp    %rbx,%rbp
 a84:	75 ea                	jne    a70 <__libc_csu_init+0x40>
 a86:	48 83 c4 08          	add    $0x8,%rsp
 a8a:	5b                   	pop    %rbx
 a8b:	5d                   	pop    %rbp
 a8c:	41 5c                	pop    %r12
 a8e:	41 5d                	pop    %r13
 a90:	41 5e                	pop    %r14
 a92:	41 5f                	pop    %r15
 a94:	c3                   	retq   
 a95:	90                   	nop
 a96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 a9d:	00 00 00 

0000000000000aa0 <__libc_csu_fini>:
 aa0:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000aa4 <_fini>:
 aa4:	48 83 ec 08          	sub    $0x8,%rsp
 aa8:	48 83 c4 08          	add    $0x8,%rsp
 aac:	c3                   	retq   

Disassembly of section .rodata:

0000000000000ab0 <_IO_stdin_used>:
 ab0:	01 00                	add    %eax,(%rax)
 ab2:	02 00                	add    (%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000000ab4 <__GNU_EH_FRAME_HDR>:
 ab4:	01 1b                	add    %ebx,(%rbx)
 ab6:	03 3b                	add    (%rbx),%edi
 ab8:	30 00                	xor    %al,(%rax)
 aba:	00 00                	add    %al,(%rax)
 abc:	05 00 00 00 6c       	add    $0x6c000000,%eax
 ac1:	fd                   	std    
 ac2:	ff                   	(bad)  
 ac3:	ff                   	(bad)  
 ac4:	7c 00                	jl     ac6 <__GNU_EH_FRAME_HDR+0x12>
 ac6:	00 00                	add    %al,(%rax)
 ac8:	7c fd                	jl     ac7 <__GNU_EH_FRAME_HDR+0x13>
 aca:	ff                   	(bad)  
 acb:	ff a4 00 00 00 8c fd 	jmpq   *-0x2740000(%rax,%rax,1)
 ad2:	ff                   	(bad)  
 ad3:	ff 4c 00 00          	decl   0x0(%rax,%rax,1)
 ad7:	00 7c ff ff          	add    %bh,-0x1(%rdi,%rdi,8)
 adb:	ff                   	(bad)  
 adc:	bc 00 00 00 ec       	mov    $0xec000000,%esp
 ae1:	ff                   	(bad)  
 ae2:	ff                   	(bad)  
 ae3:	ff 04 01             	incl   (%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000000ae8 <__FRAME_END__-0xe4>:
 ae8:	14 00                	adc    $0x0,%al
 aea:	00 00                	add    %al,(%rax)
 aec:	00 00                	add    %al,(%rax)
 aee:	00 00                	add    %al,(%rax)
 af0:	01 7a 52             	add    %edi,0x52(%rdx)
 af3:	00 01                	add    %al,(%rcx)
 af5:	78 10                	js     b07 <__GNU_EH_FRAME_HDR+0x53>
 af7:	01 1b                	add    %ebx,(%rbx)
 af9:	0c 07                	or     $0x7,%al
 afb:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 b01:	00 00                	add    %al,(%rax)
 b03:	00 1c 00             	add    %bl,(%rax,%rax,1)
 b06:	00 00                	add    %al,(%rax)
 b08:	38 fd                	cmp    %bh,%ch
 b0a:	ff                   	(bad)  
 b0b:	ff 2b                	ljmp   *(%rbx)
	...
 b15:	00 00                	add    %al,(%rax)
 b17:	00 14 00             	add    %dl,(%rax,%rax,1)
 b1a:	00 00                	add    %al,(%rax)
 b1c:	00 00                	add    %al,(%rax)
 b1e:	00 00                	add    %al,(%rax)
 b20:	01 7a 52             	add    %edi,0x52(%rdx)
 b23:	00 01                	add    %al,(%rcx)
 b25:	78 10                	js     b37 <__GNU_EH_FRAME_HDR+0x83>
 b27:	01 1b                	add    %ebx,(%rbx)
 b29:	0c 07                	or     $0x7,%al
 b2b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 b31:	00 00                	add    %al,(%rax)
 b33:	00 1c 00             	add    %bl,(%rax,%rax,1)
 b36:	00 00                	add    %al,(%rax)
 b38:	e8 fc ff ff 10       	callq  11000b39 <_end+0x10dffa21>
 b3d:	00 00                	add    %al,(%rax)
 b3f:	00 00                	add    %al,(%rax)
 b41:	0e                   	(bad)  
 b42:	10 46 0e             	adc    %al,0xe(%rsi)
 b45:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 b48:	0b 77 08             	or     0x8(%rdi),%esi
 b4b:	80 00 3f             	addb   $0x3f,(%rax)
 b4e:	1a 3b                	sbb    (%rbx),%bh
 b50:	2a 33                	sub    (%rbx),%dh
 b52:	24 22                	and    $0x22,%al
 b54:	00 00                	add    %al,(%rax)
 b56:	00 00                	add    %al,(%rax)
 b58:	14 00                	adc    $0x0,%al
 b5a:	00 00                	add    %al,(%rax)
 b5c:	44 00 00             	add    %r8b,(%rax)
 b5f:	00 d0                	add    %dl,%al
 b61:	fc                   	cld    
 b62:	ff                   	(bad)  
 b63:	ff 08                	decl   (%rax)
	...
 b6d:	00 00                	add    %al,(%rax)
 b6f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
 b73:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
 b77:	00 b8 fe ff ff 65    	add    %bh,0x65fffffe(%rax)
 b7d:	00 00                	add    %al,(%rax)
 b7f:	00 00                	add    %al,(%rax)
 b81:	42 0e                	rex.X (bad) 
 b83:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 b89:	8e 03                	mov    (%rbx),%es
 b8b:	45 0e                	rex.RB (bad) 
 b8d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 b93:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff863019e1 <_end+0xffffffff861008c9>
 b99:	06                   	(bad)  
 b9a:	48 0e                	rex.W (bad) 
 b9c:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 ba2:	72 0e                	jb     bb2 <__GNU_EH_FRAME_HDR+0xfe>
 ba4:	38 41 0e             	cmp    %al,0xe(%rcx)
 ba7:	30 41 0e             	xor    %al,0xe(%rcx)
 baa:	28 42 0e             	sub    %al,0xe(%rdx)
 bad:	20 42 0e             	and    %al,0xe(%rdx)
 bb0:	18 42 0e             	sbb    %al,0xe(%rdx)
 bb3:	10 42 0e             	adc    %al,0xe(%rdx)
 bb6:	08 00                	or     %al,(%rax)
 bb8:	10 00                	adc    %al,(%rax)
 bba:	00 00                	add    %al,(%rax)
 bbc:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
 bbd:	00 00                	add    %al,(%rax)
 bbf:	00 e0                	add    %ah,%al
 bc1:	fe                   	(bad)  
 bc2:	ff                   	(bad)  
 bc3:	ff 02                	incl   (%rdx)
 bc5:	00 00                	add    %al,(%rax)
 bc7:	00 00                	add    %al,(%rax)
 bc9:	00 00                	add    %al,(%rax)
	...

0000000000000bcc <__FRAME_END__>:
 bcc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200de0 <__frame_dummy_init_array_entry>:
  200de0:	40 09 00             	rex or %eax,(%rax)
  200de3:	00 00                	add    %al,(%rax)
  200de5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000200de8 <__do_global_dtors_aux_fini_array_entry>:
  200de8:	00 09                	add    %cl,(%rcx)
  200dea:	00 00                	add    %al,(%rax)
  200dec:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000200df0 <_DYNAMIC>:
  200df0:	01 00                	add    %eax,(%rax)
  200df2:	00 00                	add    %al,(%rax)
  200df4:	00 00                	add    %al,(%rax)
  200df6:	00 00                	add    %al,(%rax)
  200df8:	01 00                	add    %eax,(%rax)
  200dfa:	00 00                	add    %al,(%rax)
  200dfc:	00 00                	add    %al,(%rax)
  200dfe:	00 00                	add    %al,(%rax)
  200e00:	0c 00                	or     $0x0,%al
  200e02:	00 00                	add    %al,(%rax)
  200e04:	00 00                	add    %al,(%rax)
  200e06:	00 00                	add    %al,(%rax)
  200e08:	00 08                	add    %cl,(%rax)
  200e0a:	00 00                	add    %al,(%rax)
  200e0c:	00 00                	add    %al,(%rax)
  200e0e:	00 00                	add    %al,(%rax)
  200e10:	0d 00 00 00 00       	or     $0x0,%eax
  200e15:	00 00                	add    %al,(%rax)
  200e17:	00 a4 0a 00 00 00 00 	add    %ah,0x0(%rdx,%rcx,1)
  200e1e:	00 00                	add    %al,(%rax)
  200e20:	19 00                	sbb    %eax,(%rax)
  200e22:	00 00                	add    %al,(%rax)
  200e24:	00 00                	add    %al,(%rax)
  200e26:	00 00                	add    %al,(%rax)
  200e28:	e0 0d                	loopne 200e37 <_DYNAMIC+0x47>
  200e2a:	20 00                	and    %al,(%rax)
  200e2c:	00 00                	add    %al,(%rax)
  200e2e:	00 00                	add    %al,(%rax)
  200e30:	1b 00                	sbb    (%rax),%eax
  200e32:	00 00                	add    %al,(%rax)
  200e34:	00 00                	add    %al,(%rax)
  200e36:	00 00                	add    %al,(%rax)
  200e38:	08 00                	or     %al,(%rax)
  200e3a:	00 00                	add    %al,(%rax)
  200e3c:	00 00                	add    %al,(%rax)
  200e3e:	00 00                	add    %al,(%rax)
  200e40:	1a 00                	sbb    (%rax),%al
  200e42:	00 00                	add    %al,(%rax)
  200e44:	00 00                	add    %al,(%rax)
  200e46:	00 00                	add    %al,(%rax)
  200e48:	e8 0d 20 00 00       	callq  202e5a <_end+0x1d42>
  200e4d:	00 00                	add    %al,(%rax)
  200e4f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  200e52:	00 00                	add    %al,(%rax)
  200e54:	00 00                	add    %al,(%rax)
  200e56:	00 00                	add    %al,(%rax)
  200e58:	08 00                	or     %al,(%rax)
  200e5a:	00 00                	add    %al,(%rax)
  200e5c:	00 00                	add    %al,(%rax)
  200e5e:	00 00                	add    %al,(%rax)
  200e60:	f5                   	cmc    
  200e61:	fe                   	(bad)  
  200e62:	ff 6f 00             	ljmp   *0x0(%rdi)
  200e65:	00 00                	add    %al,(%rax)
  200e67:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  200e6d:	00 00                	add    %al,(%rax)
  200e6f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200e75 <_DYNAMIC+0x85>
  200e75:	00 00                	add    %al,(%rax)
  200e77:	00 48 03             	add    %cl,0x3(%rax)
  200e7a:	00 00                	add    %al,(%rax)
  200e7c:	00 00                	add    %al,(%rax)
  200e7e:	00 00                	add    %al,(%rax)
  200e80:	06                   	(bad)  
  200e81:	00 00                	add    %al,(%rax)
  200e83:	00 00                	add    %al,(%rax)
  200e85:	00 00                	add    %al,(%rax)
  200e87:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  200e8d:	00 00                	add    %al,(%rax)
  200e8f:	00 0a                	add    %cl,(%rdx)
  200e91:	00 00                	add    %al,(%rax)
  200e93:	00 00                	add    %al,(%rax)
  200e95:	00 00                	add    %al,(%rax)
  200e97:	00 7d 00             	add    %bh,0x0(%rbp)
  200e9a:	00 00                	add    %al,(%rax)
  200e9c:	00 00                	add    %al,(%rax)
  200e9e:	00 00                	add    %al,(%rax)
  200ea0:	0b 00                	or     (%rax),%eax
  200ea2:	00 00                	add    %al,(%rax)
  200ea4:	00 00                	add    %al,(%rax)
  200ea6:	00 00                	add    %al,(%rax)
  200ea8:	18 00                	sbb    %al,(%rax)
  200eaa:	00 00                	add    %al,(%rax)
  200eac:	00 00                	add    %al,(%rax)
  200eae:	00 00                	add    %al,(%rax)
  200eb0:	15 00 00 00 00       	adc    $0x0,%eax
	...
  200ebd:	00 00                	add    %al,(%rax)
  200ebf:	00 03                	add    %al,(%rbx)
  200ec1:	00 00                	add    %al,(%rax)
  200ec3:	00 00                	add    %al,(%rax)
  200ec5:	00 00                	add    %al,(%rax)
  200ec7:	00 c0                	add    %al,%al
  200ec9:	0f 20 00             	mov    %cr0,%rax
  200ecc:	00 00                	add    %al,(%rax)
  200ece:	00 00                	add    %al,(%rax)
  200ed0:	07                   	(bad)  
  200ed1:	00 00                	add    %al,(%rax)
  200ed3:	00 00                	add    %al,(%rax)
  200ed5:	00 00                	add    %al,(%rax)
  200ed7:	00 f8                	add    %bh,%al
  200ed9:	03 00                	add    (%rax),%eax
  200edb:	00 00                	add    %al,(%rax)
  200edd:	00 00                	add    %al,(%rax)
  200edf:	00 08                	add    %cl,(%rax)
  200ee1:	00 00                	add    %al,(%rax)
  200ee3:	00 00                	add    %al,(%rax)
  200ee5:	00 00                	add    %al,(%rax)
  200ee7:	00 08                	add    %cl,(%rax)
  200ee9:	04 00                	add    $0x0,%al
  200eeb:	00 00                	add    %al,(%rax)
  200eed:	00 00                	add    %al,(%rax)
  200eef:	00 09                	add    %cl,(%rcx)
  200ef1:	00 00                	add    %al,(%rax)
  200ef3:	00 00                	add    %al,(%rax)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 18                	add    %bl,(%rax)
  200ef9:	00 00                	add    %al,(%rax)
  200efb:	00 00                	add    %al,(%rax)
  200efd:	00 00                	add    %al,(%rax)
  200eff:	00 16                	add    %dl,(%rsi)
	...
  200f0d:	00 00                	add    %al,(%rax)
  200f0f:	00 1e                	add    %bl,(%rsi)
  200f11:	00 00                	add    %al,(%rax)
  200f13:	00 00                	add    %al,(%rax)
  200f15:	00 00                	add    %al,(%rax)
  200f17:	00 0c 00             	add    %cl,(%rax,%rax,1)
  200f1a:	00 00                	add    %al,(%rax)
  200f1c:	00 00                	add    %al,(%rax)
  200f1e:	00 00                	add    %al,(%rax)
  200f20:	fb                   	sti    
  200f21:	ff                   	(bad)  
  200f22:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 01                	add    %al,(%rcx)
  200f29:	00 00                	add    %al,(%rax)
  200f2b:	08 00                	or     %al,(%rax)
  200f2d:	00 00                	add    %al,(%rax)
  200f2f:	00 fe                	add    %bh,%dh
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f35:	00 00                	add    %al,(%rax)
  200f37:	00 d8                	add    %bl,%al
  200f39:	03 00                	add    (%rax),%eax
  200f3b:	00 00                	add    %al,(%rax)
  200f3d:	00 00                	add    %al,(%rax)
  200f3f:	00 ff                	add    %bh,%bh
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f45:	00 00                	add    %al,(%rax)
  200f47:	00 01                	add    %al,(%rcx)
  200f49:	00 00                	add    %al,(%rax)
  200f4b:	00 00                	add    %al,(%rax)
  200f4d:	00 00                	add    %al,(%rax)
  200f4f:	00 f0                	add    %dh,%al
  200f51:	ff                   	(bad)  
  200f52:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f55:	00 00                	add    %al,(%rax)
  200f57:	00 c6                	add    %al,%dh
  200f59:	03 00                	add    (%rax),%eax
  200f5b:	00 00                	add    %al,(%rax)
  200f5d:	00 00                	add    %al,(%rax)
  200f5f:	00 f9                	add    %bh,%cl
  200f61:	ff                   	(bad)  
  200f62:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f65:	00 00                	add    %al,(%rax)
  200f67:	00 26                	add    %ah,(%rsi)
	...

Disassembly of section .got:

0000000000200fc0 <_GLOBAL_OFFSET_TABLE_>:
  200fc0:	f0 0d 20 00 00 00    	lock or $0x20,%eax
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     %dl,(%rax)
  20100a:	20 00                	and    %al,(%rax)
  20100c:	00 00                	add    %al,(%rax)
	...

0000000000201010 <rop_start>:
  201010:	4a 09 00             	rex.WX or %rax,(%rax)
  201013:	00 00                	add    %al,(%rax)
  201015:	00 00                	add    %al,(%rax)
	...

0000000000201018 <tm_test1_gadget_000006x>:
  201018:	52                   	push   %rdx
  201019:	09 00                	or     %eax,(%rax)
  20101b:	00 00                	add    %al,(%rax)
  20101d:	00 00                	add    %al,(%rax)
	...

0000000000201020 <tm_test1_gadget_000007x>:
  201020:	56                   	push   %rsi
  201021:	09 00                	or     %eax,(%rax)
  201023:	00 00                	add    %al,(%rax)
  201025:	00 00                	add    %al,(%rax)
	...

0000000000201028 <tm_test1_gadget_000008x>:
  201028:	5a                   	pop    %rdx
  201029:	09 00                	or     %eax,(%rax)
  20102b:	00 00                	add    %al,(%rax)
  20102d:	00 00                	add    %al,(%rax)
	...

0000000000201030 <tm_test1_gadget_000009x>:
  201030:	5e                   	pop    %rsi
  201031:	09 00                	or     %eax,(%rax)
  201033:	00 00                	add    %al,(%rax)
  201035:	00 00                	add    %al,(%rax)
	...

0000000000201038 <tm_test1_gadget_00000ax>:
  201038:	62                   	(bad)  
  201039:	09 00                	or     %eax,(%rax)
  20103b:	00 00                	add    %al,(%rax)
  20103d:	00 00                	add    %al,(%rax)
	...

0000000000201040 <tm_test1_gadget_00000bx>:
  201040:	66 09 00             	or     %ax,(%rax)
  201043:	00 00                	add    %al,(%rax)
  201045:	00 00                	add    %al,(%rax)
	...

0000000000201048 <tm_test1_gadget_00000cx>:
  201048:	69 09 00 00 00 00    	imul   $0x0,(%rcx),%ecx
	...

0000000000201050 <tm_test1_gadget_00000dx>:
  201050:	71 09                	jno    20105b <main_ropchain_start+0x3>
  201052:	00 00                	add    %al,(%rax)
  201054:	00 00                	add    %al,(%rax)
	...

0000000000201058 <main_ropchain_start>:
  201058:	9e                   	sahf   
  201059:	09 00                	or     %eax,(%rax)
  20105b:	00 00                	add    %al,(%rax)
  20105d:	00 00                	add    %al,(%rax)
	...

0000000000201060 <tm_main_gadget_000013x>:
  201060:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
  201061:	09 00                	or     %eax,(%rax)
  201063:	00 00                	add    %al,(%rax)
  201065:	00 00                	add    %al,(%rax)
	...

0000000000201068 <tm_main_gadget_000014x>:
  201068:	aa                   	stos   %al,%es:(%rdi)
  201069:	09 00                	or     %eax,(%rax)
  20106b:	00 00                	add    %al,(%rax)
  20106d:	00 00                	add    %al,(%rax)
	...

0000000000201070 <tm_main_gadget_000015x>:
  201070:	af                   	scas   %es:(%rdi),%eax
  201071:	09 00                	or     %eax,(%rax)
  201073:	00 00                	add    %al,(%rax)
  201075:	00 00                	add    %al,(%rax)
	...

0000000000201078 <tm_main_gadget_000016x>:
  201078:	b7 09                	mov    $0x9,%bh
  20107a:	00 00                	add    %al,(%rax)
  20107c:	00 00                	add    %al,(%rax)
	...

0000000000201080 <tm_main_gadget_000017x>:
  201080:	bf 09 00 00 00       	mov    $0x9,%edi
  201085:	00 00                	add    %al,(%rax)
	...

0000000000201088 <tm_main_gadget_000018x>:
  201088:	c7                   	(bad)  
  201089:	09 00                	or     %eax,(%rax)
  20108b:	00 00                	add    %al,(%rax)
  20108d:	00 00                	add    %al,(%rax)
	...

0000000000201090 <tm_main_gadget_00001ax>:
  201090:	cf                   	iret   
  201091:	09 00                	or     %eax,(%rax)
  201093:	00 00                	add    %al,(%rax)
  201095:	00 00                	add    %al,(%rax)
	...

0000000000201098 <tm_main_gadget_00001bx>:
  201098:	d3 09                	rorl   %cl,(%rcx)
  20109a:	00 00                	add    %al,(%rax)
  20109c:	00 00                	add    %al,(%rax)
	...

00000000002010a0 <tm_main_gadget_00001cx>:
  2010a0:	d7                   	xlat   %ds:(%rbx)
  2010a1:	09 00                	or     %eax,(%rax)
  2010a3:	00 00                	add    %al,(%rax)
  2010a5:	00 00                	add    %al,(%rax)
	...

00000000002010a8 <tm_main_gadget_00001dx>:
  2010a8:	db 09                	fisttpl (%rcx)
  2010aa:	00 00                	add    %al,(%rax)
  2010ac:	00 00                	add    %al,(%rax)
	...

00000000002010b0 <tm_main_gadget_00001ex>:
  2010b0:	df 09                	fisttps (%rcx)
  2010b2:	00 00                	add    %al,(%rax)
  2010b4:	00 00                	add    %al,(%rax)
	...

00000000002010b8 <tm_main_gadget_00001fx>:
  2010b8:	e2 09                	loop   2010c3 <tm_main_gadget_000020x+0x3>
  2010ba:	00 00                	add    %al,(%rax)
  2010bc:	00 00                	add    %al,(%rax)
	...

00000000002010c0 <tm_main_gadget_000020x>:
  2010c0:	e5 09                	in     $0x9,%eax
  2010c2:	00 00                	add    %al,(%rax)
  2010c4:	00 00                	add    %al,(%rax)
	...

00000000002010c8 <tm_main_gadget_000021x>:
  2010c8:	f7 09 00 00 00 00    	testl  $0x0,(%rcx)
	...

00000000002010d0 <tm_main_gadget_000022x>:
  2010d0:	fb                   	sti    
  2010d1:	09 00                	or     %eax,(%rax)
  2010d3:	00 00                	add    %al,(%rax)
  2010d5:	00 00                	add    %al,(%rax)
	...

00000000002010d8 <tm_main_gadget_000024x>:
  2010d8:	00 0a                	add    %cl,(%rdx)
  2010da:	00 00                	add    %al,(%rax)
  2010dc:	00 00                	add    %al,(%rax)
	...

00000000002010e0 <tm_main_gadget_000025x>:
  2010e0:	05 0a 00 00 00       	add    $0xa,%eax
  2010e5:	00 00                	add    %al,(%rax)
	...

00000000002010e8 <tm_main_gadget_000026x>:
  2010e8:	10 0a                	adc    %cl,(%rdx)
  2010ea:	00 00                	add    %al,(%rax)
  2010ec:	00 00                	add    %al,(%rax)
	...

00000000002010f0 <tm_main_gadget_000027x>:
  2010f0:	14 0a                	adc    $0xa,%al
  2010f2:	00 00                	add    %al,(%rax)
  2010f4:	00 00                	add    %al,(%rax)
	...

00000000002010f8 <tm_main_gadget_000028x>:
  2010f8:	1f                   	(bad)  
  2010f9:	0a 00                	or     (%rax),%al
  2010fb:	00 00                	add    %al,(%rax)
  2010fd:	00 00                	add    %al,(%rax)
	...

0000000000201100 <__main_restorex>:
  201100:	99                   	cltd   
  201101:	09 00                	or     %eax,(%rax)
  201103:	00 00                	add    %al,(%rax)
  201105:	00 00                	add    %al,(%rax)
	...

0000000000201108 <__main2x>:
  201108:	9e                   	sahf   
  201109:	09 00                	or     %eax,(%rax)
  20110b:	00 00                	add    %al,(%rax)
  20110d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000201110 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x788>
   a:	74 75                	je     81 <_init-0x77f>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75426430>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x771>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 37                	and    %dh,(%rdi)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	4a 09 00             	rex.WX or %rax,(%rax)
  13:	00 00                	add    %al,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	00 dd                	add    %bl,%ch
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	2a 00                	sub    (%rax),%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 01                	or     %al,(%rcx)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	4a 09 00             	rex.WX or %rax,(%rax)
  13:	00 00                	add    %al,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	00 27                	add    %ah,(%rdi)
  19:	0a 00                	or     (%rax),%al
	...
  23:	00 0c 00             	add    %cl,(%rax,%rax,1)
  26:	00 00                	add    %al,(%rax)
  28:	3b 00                	cmp    (%rax),%eax
  2a:	00 00                	add    %al,(%rax)
  2c:	01                   	.byte 0x1
  2d:	80                   	.byte 0x80

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	00 10                	add    %dl,(%rax)
   4:	06                   	(bad)  
   5:	11 01                	adc    %eax,(%rcx)
   7:	12 01                	adc    (%rcx),%al
   9:	03 0e                	add    (%rsi),%ecx
   b:	1b 0e                	sbb    (%rsi),%ecx
   d:	25 0e 13 05 00       	and    $0x5130e,%eax
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	73 00                	jae    2 <_init-0x7fe>
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	22 00                	and    (%rax),%al
   8:	00 00                	add    %al,(%rax)
   a:	01 01                	add    %eax,(%rcx)
   c:	fb                   	sti    
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	00 6d 61             	add    %ch,0x61(%rbp)
  1e:	69 6e 2e 6f 2e 74 6d 	imul   $0x6d742e6f,0x2e(%rsi),%ebp
  25:	2e 53                	cs push %rbx
  27:	00 00                	add    %al,(%rax)
  29:	00 00                	add    %al,(%rax)
  2b:	00 00                	add    %al,(%rax)
  2d:	09 02                	or     %eax,(%rdx)
  2f:	4a 09 00             	rex.WX or %rax,(%rax)
  32:	00 00                	add    %al,(%rax)
  34:	00 00                	add    %al,(%rax)
  36:	00 03                	add    %al,(%rbx)
  38:	0b 01                	or     (%rcx),%eax
  3a:	89 51 51             	mov    %edx,0x51(%rcx)
  3d:	51                   	push   %rcx
  3e:	51                   	push   %rcx
  3f:	51                   	push   %rcx
  40:	44 03 09             	add    (%rcx),%r9d
  43:	82                   	(bad)  
  44:	88 21                	mov    %ah,(%rcx)
  46:	3d 4b 9f 3d 9f       	cmp    $0x9f3d9f4b,%eax
  4b:	22 3d 21 03 09 20    	and    0x20090321(%rip),%bh        # 20090372 <_end+0x1fe8f25a>
  51:	89 51 5f             	mov    %edx,0x5f(%rcx)
  54:	89 89 89 03 09 82    	mov    %ecx,-0x7df6fc77(%rcx)
  5a:	51                   	push   %rcx
  5b:	51                   	push   %rcx
  5c:	51                   	push   %rcx
  5d:	51                   	push   %rcx
  5e:	43 03 09             	rex.XB add (%r9),%ecx
  61:	3c 08                	cmp    $0x8,%al
  63:	27                   	(bad)  
  64:	51                   	push   %rcx
  65:	03 09                	add    (%rcx),%ecx
  67:	58                   	pop    %rax
  68:	03 0a                	add    (%rdx),%ecx
  6a:	58                   	pop    %rax
  6b:	b3 03                	mov    $0x3,%bl
  6d:	0a 4a 03             	or     0x3(%rdx),%cl
  70:	09 ac 02 08 00 01 01 	or     %ebp,0x1010008(%rdx,%rax,1)

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	6d                   	insl   (%dx),%es:(%rdi)
   1:	61                   	(bad)  
   2:	69 6e 2e 6f 2e 74 6d 	imul   $0x6d742e6f,0x2e(%rsi),%ebp
   9:	2e 53                	cs push %rbx
   b:	00 2f                	add    %ch,(%rdi)
   d:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
  12:	66 71 76             	data16 jno 8b <_init-0x775>
  15:	31 39                	xor    %edi,(%rcx)
  17:	38 32                	cmp    %dh,(%rdx)
  19:	2f                   	(bad)  
  1a:	50                   	push   %rax
  1b:	72 6f                	jb     8c <_init-0x774>
  1d:	6a 65                	pushq  $0x65
  1f:	63 74 73 2f          	movslq 0x2f(%rbx,%rsi,2),%esi
  23:	72 6f                	jb     94 <_init-0x76c>
  25:	70 6c                	jo     93 <_init-0x76d>
  27:	2d 62 61 63 6b       	sub    $0x6b636162,%eax
  2c:	65 6e                	outsb  %gs:(%rsi),(%dx)
  2e:	64 2f                	fs (bad) 
  30:	74 65                	je     97 <_init-0x769>
  32:	73 74                	jae    a8 <_init-0x758>
  34:	2f                   	(bad)  
  35:	74 65                	je     9c <_init-0x764>
  37:	73 74                	jae    ad <_init-0x753>
  39:	32 00                	xor    (%rax),%al
  3b:	47                   	rex.RXB
  3c:	4e 55                	rex.WRX push %rbp
  3e:	20 41 53             	and    %al,0x53(%rcx)
  41:	20 32                	and    %dh,(%rdx)
  43:	2e 33 30             	xor    %cs:(%rax),%esi
	...
