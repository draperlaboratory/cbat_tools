
main-original:     file format elf64-x86-64
main-original
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x00000000000004f0

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r--
  INTERP off    0x0000000000000238 vaddr 0x0000000000000238 paddr 0x0000000000000238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**21
         filesz 0x0000000000000850 memsz 0x0000000000000850 flags r-x
    LOAD off    0x0000000000000df0 vaddr 0x0000000000200df0 paddr 0x0000000000200df0 align 2**21
         filesz 0x0000000000000220 memsz 0x0000000000000228 flags rw-
 DYNAMIC off    0x0000000000000e00 vaddr 0x0000000000200e00 paddr 0x0000000000200e00 align 2**3
         filesz 0x00000000000001c0 memsz 0x00000000000001c0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000000254 paddr 0x0000000000000254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x00000000000006e4 vaddr 0x00000000000006e4 paddr 0x00000000000006e4 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000df0 vaddr 0x0000000000200df0 paddr 0x0000000000200df0 align 2**0
         filesz 0x0000000000000210 memsz 0x0000000000000210 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00000000000004b8
  FINI                 0x00000000000006d4
  INIT_ARRAY           0x0000000000200df0
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000200df8
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000298
  STRTAB               0x0000000000000348
  SYMTAB               0x00000000000002b8
  STRSZ                0x000000000000007d
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000200fc0
  RELA                 0x00000000000003f8
  RELASZ               0x00000000000000c0
  RELAENT              0x0000000000000018
  FLAGS                0x0000000000000008
  FLAGS_1              0x0000000008000001
  VERNEED              0x00000000000003d8
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x00000000000003c6
  RELACOUNT            0x0000000000000003

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000000238  0000000000000238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000000254  0000000000000254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000000274  0000000000000274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     0000001c  0000000000000298  0000000000000298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000090  00000000000002b8  00000000000002b8  000002b8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000007d  0000000000000348  0000000000000348  00000348  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  0000000c  00000000000003c6  00000000000003c6  000003c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  00000000000003d8  00000000000003d8  000003d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     000000c0  00000000000003f8  00000000000003f8  000003f8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .init         00000017  00000000000004b8  00000000000004b8  000004b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .plt          00000010  00000000000004d0  00000000000004d0  000004d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt.got      00000008  00000000000004e0  00000000000004e0  000004e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         000001e2  00000000000004f0  00000000000004f0  000004f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000009  00000000000006d4  00000000000006d4  000006d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       00000004  00000000000006e0  00000000000006e0  000006e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 00000044  00000000000006e4  00000000000006e4  000006e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     00000128  0000000000000728  0000000000000728  00000728  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000008  0000000000200df0  0000000000200df0  00000df0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000008  0000000000200df8  0000000000200df8  00000df8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .dynamic      000001c0  0000000000200e00  0000000000200e00  00000e00  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .got          00000040  0000000000200fc0  0000000000200fc0  00000fc0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .data         00000010  0000000000201000  0000000000201000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .bss          00000008  0000000000201010  0000000000201010  00001010  2**0
                  ALLOC
 23 .comment      0000002b  0000000000000000  0000000000000000  00001010  2**0
                  CONTENTS, READONLY
 24 .debug_aranges 00000030  0000000000000000  0000000000000000  0000103b  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .debug_info   000000a7  0000000000000000  0000000000000000  0000106b  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .debug_abbrev 00000071  0000000000000000  0000000000000000  00001112  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_line   00000052  0000000000000000  0000000000000000  00001183  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_str    00000088  0000000000000000  0000000000000000  000011d5  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000000238 l    d  .interp	0000000000000000              .interp
0000000000000254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000000274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000000298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000000002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000000348 l    d  .dynstr	0000000000000000              .dynstr
00000000000003c6 l    d  .gnu.version	0000000000000000              .gnu.version
00000000000003d8 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
00000000000003f8 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000000004b8 l    d  .init	0000000000000000              .init
00000000000004d0 l    d  .plt	0000000000000000              .plt
00000000000004e0 l    d  .plt.got	0000000000000000              .plt.got
00000000000004f0 l    d  .text	0000000000000000              .text
00000000000006d4 l    d  .fini	0000000000000000              .fini
00000000000006e0 l    d  .rodata	0000000000000000              .rodata
00000000000006e4 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000000728 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000200df0 l    d  .init_array	0000000000000000              .init_array
0000000000200df8 l    d  .fini_array	0000000000000000              .fini_array
0000000000200e00 l    d  .dynamic	0000000000000000              .dynamic
0000000000200fc0 l    d  .got	0000000000000000              .got
0000000000201000 l    d  .data	0000000000000000              .data
0000000000201010 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000000520 l     F .text	0000000000000000              deregister_tm_clones
0000000000000560 l     F .text	0000000000000000              register_tm_clones
00000000000005b0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000201010 l     O .bss	0000000000000001              completed.7697
0000000000200df8 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
00000000000005f0 l     F .text	0000000000000000              frame_dummy
0000000000200df0 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              main.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
000000000000084c l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000200df8 l       .init_array	0000000000000000              __init_array_end
0000000000200e00 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000200df0 l       .init_array	0000000000000000              __init_array_start
00000000000006e4 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000200fc0 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
00000000000006d0 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000201000  w      .data	0000000000000000              data_start
0000000000201010 g       .data	0000000000000000              _edata
00000000000006d4 g     F .fini	0000000000000000              _fini
00000000000005fa g     F .text	0000000000000014              test1
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000201000 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000201008 g     O .data	0000000000000000              .hidden __dso_handle
00000000000006e0 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000000660 g     F .text	0000000000000065              __libc_csu_init
0000000000201018 g       .bss	0000000000000000              _end
00000000000004f0 g     F .text	000000000000002b              _start
0000000000201010 g       .bss	0000000000000000              __bss_start
000000000000060e g     F .text	0000000000000046              main
0000000000201010 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5
00000000000004b8 g     F .init	0000000000000000              _init



Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x243>
 248:	78 38                	js     282 <_init-0x236>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 ea                	add    %ch,%dl
 285:	18 a6 59 33 1e 33    	sbb    %ah,0x331e3359(%rsi)
 28b:	93                   	xchg   %eax,%ebx
 28c:	c9                   	leaveq 
 28d:	95                   	xchg   %eax,%ebp
 28e:	87 58 ce             	xchg   %ebx,-0x32(%rax)
 291:	15 9b 77 d3 15       	adc    $0x15d3779b,%eax
 296:	00 cf                	add    %cl,%bh

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	38 00                	cmp    %al,(%rax)
 2d2:	00 00                	add    %al,(%rax)
 2d4:	20 00                	and    %al,(%rax)
	...
 2e6:	00 00                	add    %al,(%rax)
 2e8:	1a 00                	sbb    (%rax),%al
 2ea:	00 00                	add    %al,(%rax)
 2ec:	12 00                	adc    (%rax),%al
	...
 2fe:	00 00                	add    %al,(%rax)
 300:	54                   	push   %rsp
 301:	00 00                	add    %al,(%rax)
 303:	00 20                	add    %ah,(%rax)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 63 00             	add    %ah,0x0(%rbx)
 31a:	00 00                	add    %al,(%rax)
 31c:	20 00                	and    %al,(%rax)
	...
 32e:	00 00                	add    %al,(%rax)
 330:	0b 00                	or     (%rax),%eax
 332:	00 00                	add    %al,(%rax)
 334:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000348 <.dynstr>:
 348:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 34c:	63 2e                	movslq (%rsi),%ebp
 34e:	73 6f                	jae    3bf <_init-0xf9>
 350:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 355:	63 78 61             	movslq 0x61(%rax),%edi
 358:	5f                   	pop    %rdi
 359:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 35f:	7a 65                	jp     3c6 <_init-0xf2>
 361:	00 5f 5f             	add    %bl,0x5f(%rdi)
 364:	6c                   	insb   (%dx),%es:(%rdi)
 365:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 36c:	72 74                	jb     3e2 <_init-0xd6>
 36e:	5f                   	pop    %rdi
 36f:	6d                   	insl   (%dx),%es:(%rdi)
 370:	61                   	(bad)  
 371:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 378:	43 5f                	rex.XB pop %r15
 37a:	32 2e                	xor    (%rsi),%ch
 37c:	32 2e                	xor    (%rsi),%ch
 37e:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 383:	4d 5f                	rex.WRB pop %r15
 385:	64 65 72 65          	fs gs jb 3ee <_init-0xca>
 389:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 390:	4d 
 391:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 393:	6f                   	outsl  %ds:(%rsi),(%dx)
 394:	6e                   	outsb  %ds:(%rsi),(%dx)
 395:	65 54                	gs push %rsp
 397:	61                   	(bad)  
 398:	62                   	(bad)  
 399:	6c                   	insb   (%dx),%es:(%rdi)
 39a:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 39e:	67 6d                	insl   (%dx),%es:(%edi)
 3a0:	6f                   	outsl  %ds:(%rsi),(%dx)
 3a1:	6e                   	outsb  %ds:(%rsi),(%dx)
 3a2:	5f                   	pop    %rdi
 3a3:	73 74                	jae    419 <_init-0x9f>
 3a5:	61                   	(bad)  
 3a6:	72 74                	jb     41c <_init-0x9c>
 3a8:	5f                   	pop    %rdi
 3a9:	5f                   	pop    %rdi
 3aa:	00 5f 49             	add    %bl,0x49(%rdi)
 3ad:	54                   	push   %rsp
 3ae:	4d 5f                	rex.WRB pop %r15
 3b0:	72 65                	jb     417 <_init-0xa1>
 3b2:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3b9:	4d 
 3ba:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3bc:	6f                   	outsl  %ds:(%rsi),(%dx)
 3bd:	6e                   	outsb  %ds:(%rsi),(%dx)
 3be:	65 54                	gs push %rsp
 3c0:	61                   	(bad)  
 3c1:	62                   	.byte 0x62
 3c2:	6c                   	insb   (%dx),%es:(%rdi)
 3c3:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000003c6 <.gnu.version>:
 3c6:	00 00                	add    %al,(%rax)
 3c8:	00 00                	add    %al,(%rax)
 3ca:	02 00                	add    (%rax),%al
 3cc:	00 00                	add    %al,(%rax)
 3ce:	00 00                	add    %al,(%rax)
 3d0:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

00000000000003d8 <.gnu.version_r>:
 3d8:	01 00                	add    %eax,(%rax)
 3da:	01 00                	add    %eax,(%rax)
 3dc:	01 00                	add    %eax,(%rax)
 3de:	00 00                	add    %al,(%rax)
 3e0:	10 00                	adc    %al,(%rax)
 3e2:	00 00                	add    %al,(%rax)
 3e4:	00 00                	add    %al,(%rax)
 3e6:	00 00                	add    %al,(%rax)
 3e8:	75 1a                	jne    404 <_init-0xb4>
 3ea:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 3f0:	2c 00                	sub    $0x0,%al
 3f2:	00 00                	add    %al,(%rax)
 3f4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000003f8 <.rela.dyn>:
 3f8:	f0 0d 20 00 00 00    	lock or $0x20,%eax
 3fe:	00 00                	add    %al,(%rax)
 400:	08 00                	or     %al,(%rax)
 402:	00 00                	add    %al,(%rax)
 404:	00 00                	add    %al,(%rax)
 406:	00 00                	add    %al,(%rax)
 408:	f0 05 00 00 00 00    	lock add $0x0,%eax
 40e:	00 00                	add    %al,(%rax)
 410:	f8                   	clc    
 411:	0d 20 00 00 00       	or     $0x20,%eax
 416:	00 00                	add    %al,(%rax)
 418:	08 00                	or     %al,(%rax)
 41a:	00 00                	add    %al,(%rax)
 41c:	00 00                	add    %al,(%rax)
 41e:	00 00                	add    %al,(%rax)
 420:	b0 05                	mov    $0x5,%al
 422:	00 00                	add    %al,(%rax)
 424:	00 00                	add    %al,(%rax)
 426:	00 00                	add    %al,(%rax)
 428:	08 10                	or     %dl,(%rax)
 42a:	20 00                	and    %al,(%rax)
 42c:	00 00                	add    %al,(%rax)
 42e:	00 00                	add    %al,(%rax)
 430:	08 00                	or     %al,(%rax)
 432:	00 00                	add    %al,(%rax)
 434:	00 00                	add    %al,(%rax)
 436:	00 00                	add    %al,(%rax)
 438:	08 10                	or     %dl,(%rax)
 43a:	20 00                	and    %al,(%rax)
 43c:	00 00                	add    %al,(%rax)
 43e:	00 00                	add    %al,(%rax)
 440:	d8 0f                	fmuls  (%rdi)
 442:	20 00                	and    %al,(%rax)
 444:	00 00                	add    %al,(%rax)
 446:	00 00                	add    %al,(%rax)
 448:	06                   	(bad)  
 449:	00 00                	add    %al,(%rax)
 44b:	00 01                	add    %al,(%rcx)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 e0                	add    %ah,%al
 459:	0f 20 00             	mov    %cr0,%rax
 45c:	00 00                	add    %al,(%rax)
 45e:	00 00                	add    %al,(%rax)
 460:	06                   	(bad)  
 461:	00 00                	add    %al,(%rax)
 463:	00 02                	add    %al,(%rdx)
	...
 46d:	00 00                	add    %al,(%rax)
 46f:	00 e8                	add    %ch,%al
 471:	0f 20 00             	mov    %cr0,%rax
 474:	00 00                	add    %al,(%rax)
 476:	00 00                	add    %al,(%rax)
 478:	06                   	(bad)  
 479:	00 00                	add    %al,(%rax)
 47b:	00 03                	add    %al,(%rbx)
	...
 485:	00 00                	add    %al,(%rax)
 487:	00 f0                	add    %dh,%al
 489:	0f 20 00             	mov    %cr0,%rax
 48c:	00 00                	add    %al,(%rax)
 48e:	00 00                	add    %al,(%rax)
 490:	06                   	(bad)  
 491:	00 00                	add    %al,(%rax)
 493:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 49e:	00 00                	add    %al,(%rax)
 4a0:	f8                   	clc    
 4a1:	0f 20 00             	mov    %cr0,%rax
 4a4:	00 00                	add    %al,(%rax)
 4a6:	00 00                	add    %al,(%rax)
 4a8:	06                   	(bad)  
 4a9:	00 00                	add    %al,(%rax)
 4ab:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 4b1 <_init-0x7>
 4b1:	00 00                	add    %al,(%rax)
 4b3:	00 00                	add    %al,(%rax)
 4b5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

00000000000004b8 <_init>:
 4b8:	48 83 ec 08          	sub    $0x8,%rsp
 4bc:	48 8b 05 25 0b 20 00 	mov    0x200b25(%rip),%rax        # 200fe8 <__gmon_start__>
 4c3:	48 85 c0             	test   %rax,%rax
 4c6:	74 02                	je     4ca <_init+0x12>
 4c8:	ff d0                	callq  *%rax
 4ca:	48 83 c4 08          	add    $0x8,%rsp
 4ce:	c3                   	retq   

Disassembly of section .plt:

00000000000004d0 <.plt>:
 4d0:	ff 35 f2 0a 20 00    	pushq  0x200af2(%rip)        # 200fc8 <_GLOBAL_OFFSET_TABLE_+0x8>
 4d6:	ff 25 f4 0a 20 00    	jmpq   *0x200af4(%rip)        # 200fd0 <_GLOBAL_OFFSET_TABLE_+0x10>
 4dc:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

00000000000004e0 <__cxa_finalize@plt>:
 4e0:	ff 25 12 0b 20 00    	jmpq   *0x200b12(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 4e6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000004f0 <_start>:
 4f0:	31 ed                	xor    %ebp,%ebp
 4f2:	49 89 d1             	mov    %rdx,%r9
 4f5:	5e                   	pop    %rsi
 4f6:	48 89 e2             	mov    %rsp,%rdx
 4f9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 4fd:	50                   	push   %rax
 4fe:	54                   	push   %rsp
 4ff:	4c 8d 05 ca 01 00 00 	lea    0x1ca(%rip),%r8        # 6d0 <__libc_csu_fini>
 506:	48 8d 0d 53 01 00 00 	lea    0x153(%rip),%rcx        # 660 <__libc_csu_init>
 50d:	48 8d 3d fa 00 00 00 	lea    0xfa(%rip),%rdi        # 60e <main>
 514:	ff 15 c6 0a 20 00    	callq  *0x200ac6(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 51a:	f4                   	hlt    
 51b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000520 <deregister_tm_clones>:
 520:	48 8d 3d e9 0a 20 00 	lea    0x200ae9(%rip),%rdi        # 201010 <__TMC_END__>
 527:	55                   	push   %rbp
 528:	48 8d 05 e1 0a 20 00 	lea    0x200ae1(%rip),%rax        # 201010 <__TMC_END__>
 52f:	48 39 f8             	cmp    %rdi,%rax
 532:	48 89 e5             	mov    %rsp,%rbp
 535:	74 19                	je     550 <deregister_tm_clones+0x30>
 537:	48 8b 05 9a 0a 20 00 	mov    0x200a9a(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 53e:	48 85 c0             	test   %rax,%rax
 541:	74 0d                	je     550 <deregister_tm_clones+0x30>
 543:	5d                   	pop    %rbp
 544:	ff e0                	jmpq   *%rax
 546:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 54d:	00 00 00 
 550:	5d                   	pop    %rbp
 551:	c3                   	retq   
 552:	0f 1f 40 00          	nopl   0x0(%rax)
 556:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 55d:	00 00 00 

0000000000000560 <register_tm_clones>:
 560:	48 8d 3d a9 0a 20 00 	lea    0x200aa9(%rip),%rdi        # 201010 <__TMC_END__>
 567:	48 8d 35 a2 0a 20 00 	lea    0x200aa2(%rip),%rsi        # 201010 <__TMC_END__>
 56e:	55                   	push   %rbp
 56f:	48 29 fe             	sub    %rdi,%rsi
 572:	48 89 e5             	mov    %rsp,%rbp
 575:	48 c1 fe 03          	sar    $0x3,%rsi
 579:	48 89 f0             	mov    %rsi,%rax
 57c:	48 c1 e8 3f          	shr    $0x3f,%rax
 580:	48 01 c6             	add    %rax,%rsi
 583:	48 d1 fe             	sar    %rsi
 586:	74 18                	je     5a0 <register_tm_clones+0x40>
 588:	48 8b 05 61 0a 20 00 	mov    0x200a61(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 58f:	48 85 c0             	test   %rax,%rax
 592:	74 0c                	je     5a0 <register_tm_clones+0x40>
 594:	5d                   	pop    %rbp
 595:	ff e0                	jmpq   *%rax
 597:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 59e:	00 00 
 5a0:	5d                   	pop    %rbp
 5a1:	c3                   	retq   
 5a2:	0f 1f 40 00          	nopl   0x0(%rax)
 5a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 5ad:	00 00 00 

00000000000005b0 <__do_global_dtors_aux>:
 5b0:	80 3d 59 0a 20 00 00 	cmpb   $0x0,0x200a59(%rip)        # 201010 <__TMC_END__>
 5b7:	75 2f                	jne    5e8 <__do_global_dtors_aux+0x38>
 5b9:	48 83 3d 37 0a 20 00 	cmpq   $0x0,0x200a37(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 5c0:	00 
 5c1:	55                   	push   %rbp
 5c2:	48 89 e5             	mov    %rsp,%rbp
 5c5:	74 0c                	je     5d3 <__do_global_dtors_aux+0x23>
 5c7:	48 8b 3d 3a 0a 20 00 	mov    0x200a3a(%rip),%rdi        # 201008 <__dso_handle>
 5ce:	e8 0d ff ff ff       	callq  4e0 <__cxa_finalize@plt>
 5d3:	e8 48 ff ff ff       	callq  520 <deregister_tm_clones>
 5d8:	c6 05 31 0a 20 00 01 	movb   $0x1,0x200a31(%rip)        # 201010 <__TMC_END__>
 5df:	5d                   	pop    %rbp
 5e0:	c3                   	retq   
 5e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 5e8:	f3 c3                	repz retq 
 5ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000005f0 <frame_dummy>:
 5f0:	55                   	push   %rbp
 5f1:	48 89 e5             	mov    %rsp,%rbp
 5f4:	5d                   	pop    %rbp
 5f5:	e9 66 ff ff ff       	jmpq   560 <register_tm_clones>

00000000000005fa <test1>:
 5fa:	55                   	push   %rbp
 5fb:	48 89 e5             	mov    %rsp,%rbp
 5fe:	89 7d fc             	mov    %edi,-0x4(%rbp)
 601:	89 75 f8             	mov    %esi,-0x8(%rbp)
 604:	8b 55 fc             	mov    -0x4(%rbp),%edx
 607:	8b 45 f8             	mov    -0x8(%rbp),%eax
 60a:	01 d0                	add    %edx,%eax
 60c:	5d                   	pop    %rbp
 60d:	c3                   	retq   

000000000000060e <main>:
 60e:	55                   	push   %rbp
 60f:	48 89 e5             	mov    %rsp,%rbp
 612:	48 83 ec 10          	sub    $0x10,%rsp
 616:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 61d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 624:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 62b:	eb 1c                	jmp    649 <main+0x3b>
 62d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 630:	8d 50 01             	lea    0x1(%rax),%edx
 633:	89 55 f8             	mov    %edx,-0x8(%rbp)
 636:	8b 55 f8             	mov    -0x8(%rbp),%edx
 639:	89 c6                	mov    %eax,%esi
 63b:	89 d7                	mov    %edx,%edi
 63d:	e8 b8 ff ff ff       	callq  5fa <test1>
 642:	01 45 fc             	add    %eax,-0x4(%rbp)
 645:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
 649:	83 7d f8 09          	cmpl   $0x9,-0x8(%rbp)
 64d:	7e de                	jle    62d <main+0x1f>
 64f:	8b 45 fc             	mov    -0x4(%rbp),%eax
 652:	c9                   	leaveq 
 653:	c3                   	retq   
 654:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 65b:	00 00 00 
 65e:	66 90                	xchg   %ax,%ax

0000000000000660 <__libc_csu_init>:
 660:	41 57                	push   %r15
 662:	41 56                	push   %r14
 664:	49 89 d7             	mov    %rdx,%r15
 667:	41 55                	push   %r13
 669:	41 54                	push   %r12
 66b:	4c 8d 25 7e 07 20 00 	lea    0x20077e(%rip),%r12        # 200df0 <__frame_dummy_init_array_entry>
 672:	55                   	push   %rbp
 673:	48 8d 2d 7e 07 20 00 	lea    0x20077e(%rip),%rbp        # 200df8 <__init_array_end>
 67a:	53                   	push   %rbx
 67b:	41 89 fd             	mov    %edi,%r13d
 67e:	49 89 f6             	mov    %rsi,%r14
 681:	4c 29 e5             	sub    %r12,%rbp
 684:	48 83 ec 08          	sub    $0x8,%rsp
 688:	48 c1 fd 03          	sar    $0x3,%rbp
 68c:	e8 27 fe ff ff       	callq  4b8 <_init>
 691:	48 85 ed             	test   %rbp,%rbp
 694:	74 20                	je     6b6 <__libc_csu_init+0x56>
 696:	31 db                	xor    %ebx,%ebx
 698:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 69f:	00 
 6a0:	4c 89 fa             	mov    %r15,%rdx
 6a3:	4c 89 f6             	mov    %r14,%rsi
 6a6:	44 89 ef             	mov    %r13d,%edi
 6a9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 6ad:	48 83 c3 01          	add    $0x1,%rbx
 6b1:	48 39 dd             	cmp    %rbx,%rbp
 6b4:	75 ea                	jne    6a0 <__libc_csu_init+0x40>
 6b6:	48 83 c4 08          	add    $0x8,%rsp
 6ba:	5b                   	pop    %rbx
 6bb:	5d                   	pop    %rbp
 6bc:	41 5c                	pop    %r12
 6be:	41 5d                	pop    %r13
 6c0:	41 5e                	pop    %r14
 6c2:	41 5f                	pop    %r15
 6c4:	c3                   	retq   
 6c5:	90                   	nop
 6c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 6cd:	00 00 00 

00000000000006d0 <__libc_csu_fini>:
 6d0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000000006d4 <_fini>:
 6d4:	48 83 ec 08          	sub    $0x8,%rsp
 6d8:	48 83 c4 08          	add    $0x8,%rsp
 6dc:	c3                   	retq   

Disassembly of section .rodata:

00000000000006e0 <_IO_stdin_used>:
 6e0:	01 00                	add    %eax,(%rax)
 6e2:	02 00                	add    (%rax),%al

Disassembly of section .eh_frame_hdr:

00000000000006e4 <__GNU_EH_FRAME_HDR>:
 6e4:	01 1b                	add    %ebx,(%rbx)
 6e6:	03 3b                	add    (%rbx),%edi
 6e8:	40 00 00             	add    %al,(%rax)
 6eb:	00 07                	add    %al,(%rdi)
 6ed:	00 00                	add    %al,(%rax)
 6ef:	00 ec                	add    %ch,%ah
 6f1:	fd                   	std    
 6f2:	ff                   	(bad)  
 6f3:	ff 8c 00 00 00 fc fd 	decl   -0x2040000(%rax,%rax,1)
 6fa:	ff                   	(bad)  
 6fb:	ff b4 00 00 00 0c fe 	pushq  -0x1f40000(%rax,%rax,1)
 702:	ff                   	(bad)  
 703:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
 707:	00 16                	add    %dl,(%rsi)
 709:	ff                   	(bad)  
 70a:	ff                   	(bad)  
 70b:	ff cc                	dec    %esp
 70d:	00 00                	add    %al,(%rax)
 70f:	00 2a                	add    %ch,(%rdx)
 711:	ff                   	(bad)  
 712:	ff                   	(bad)  
 713:	ff                   	(bad)  
 714:	ec                   	in     (%dx),%al
 715:	00 00                	add    %al,(%rax)
 717:	00 7c ff ff          	add    %bh,-0x1(%rdi,%rdi,8)
 71b:	ff 0c 01             	decl   (%rcx,%rax,1)
 71e:	00 00                	add    %al,(%rax)
 720:	ec                   	in     (%dx),%al
 721:	ff                   	(bad)  
 722:	ff                   	(bad)  
 723:	ff 54 01 00          	callq  *0x0(%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000000728 <__FRAME_END__-0x124>:
 728:	14 00                	adc    $0x0,%al
 72a:	00 00                	add    %al,(%rax)
 72c:	00 00                	add    %al,(%rax)
 72e:	00 00                	add    %al,(%rax)
 730:	01 7a 52             	add    %edi,0x52(%rdx)
 733:	00 01                	add    %al,(%rcx)
 735:	78 10                	js     747 <__GNU_EH_FRAME_HDR+0x63>
 737:	01 1b                	add    %ebx,(%rbx)
 739:	0c 07                	or     $0x7,%al
 73b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 741:	00 00                	add    %al,(%rax)
 743:	00 1c 00             	add    %bl,(%rax,%rax,1)
 746:	00 00                	add    %al,(%rax)
 748:	a8 fd                	test   $0xfd,%al
 74a:	ff                   	(bad)  
 74b:	ff 2b                	ljmp   *(%rbx)
	...
 755:	00 00                	add    %al,(%rax)
 757:	00 14 00             	add    %dl,(%rax,%rax,1)
 75a:	00 00                	add    %al,(%rax)
 75c:	00 00                	add    %al,(%rax)
 75e:	00 00                	add    %al,(%rax)
 760:	01 7a 52             	add    %edi,0x52(%rdx)
 763:	00 01                	add    %al,(%rcx)
 765:	78 10                	js     777 <__GNU_EH_FRAME_HDR+0x93>
 767:	01 1b                	add    %ebx,(%rbx)
 769:	0c 07                	or     $0x7,%al
 76b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 771:	00 00                	add    %al,(%rax)
 773:	00 1c 00             	add    %bl,(%rax,%rax,1)
 776:	00 00                	add    %al,(%rax)
 778:	58                   	pop    %rax
 779:	fd                   	std    
 77a:	ff                   	(bad)  
 77b:	ff 10                	callq  *(%rax)
 77d:	00 00                	add    %al,(%rax)
 77f:	00 00                	add    %al,(%rax)
 781:	0e                   	(bad)  
 782:	10 46 0e             	adc    %al,0xe(%rsi)
 785:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 788:	0b 77 08             	or     0x8(%rdi),%esi
 78b:	80 00 3f             	addb   $0x3f,(%rax)
 78e:	1a 3b                	sbb    (%rbx),%bh
 790:	2a 33                	sub    (%rbx),%dh
 792:	24 22                	and    $0x22,%al
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	14 00                	adc    $0x0,%al
 79a:	00 00                	add    %al,(%rax)
 79c:	44 00 00             	add    %r8b,(%rax)
 79f:	00 40 fd             	add    %al,-0x3(%rax)
 7a2:	ff                   	(bad)  
 7a3:	ff 08                	decl   (%rax)
	...
 7ad:	00 00                	add    %al,(%rax)
 7af:	00 1c 00             	add    %bl,(%rax,%rax,1)
 7b2:	00 00                	add    %al,(%rax)
 7b4:	5c                   	pop    %rsp
 7b5:	00 00                	add    %al,(%rax)
 7b7:	00 42 fe             	add    %al,-0x2(%rdx)
 7ba:	ff                   	(bad)  
 7bb:	ff 14 00             	callq  *(%rax,%rax,1)
 7be:	00 00                	add    %al,(%rax)
 7c0:	00 41 0e             	add    %al,0xe(%rcx)
 7c3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 7c9:	4f 0c 07             	rex.WRXB or $0x7,%al
 7cc:	08 00                	or     %al,(%rax)
 7ce:	00 00                	add    %al,(%rax)
 7d0:	1c 00                	sbb    $0x0,%al
 7d2:	00 00                	add    %al,(%rax)
 7d4:	7c 00                	jl     7d6 <__GNU_EH_FRAME_HDR+0xf2>
 7d6:	00 00                	add    %al,(%rax)
 7d8:	36 fe                	ss (bad) 
 7da:	ff                   	(bad)  
 7db:	ff 46 00             	incl   0x0(%rsi)
 7de:	00 00                	add    %al,(%rax)
 7e0:	00 41 0e             	add    %al,0xe(%rcx)
 7e3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 7e9:	02 41 0c             	add    0xc(%rcx),%al
 7ec:	07                   	(bad)  
 7ed:	08 00                	or     %al,(%rax)
 7ef:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
 7f3:	00 9c 00 00 00 68 fe 	add    %bl,-0x1980000(%rax,%rax,1)
 7fa:	ff                   	(bad)  
 7fb:	ff 65 00             	jmpq   *0x0(%rbp)
 7fe:	00 00                	add    %al,(%rax)
 800:	00 42 0e             	add    %al,0xe(%rdx)
 803:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 809:	8e 03                	mov    (%rbx),%es
 80b:	45 0e                	rex.RB (bad) 
 80d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 813:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301661 <_end+0xffffffff86100649>
 819:	06                   	(bad)  
 81a:	48 0e                	rex.W (bad) 
 81c:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 822:	72 0e                	jb     832 <__GNU_EH_FRAME_HDR+0x14e>
 824:	38 41 0e             	cmp    %al,0xe(%rcx)
 827:	30 41 0e             	xor    %al,0xe(%rcx)
 82a:	28 42 0e             	sub    %al,0xe(%rdx)
 82d:	20 42 0e             	and    %al,0xe(%rdx)
 830:	18 42 0e             	sbb    %al,0xe(%rdx)
 833:	10 42 0e             	adc    %al,0xe(%rdx)
 836:	08 00                	or     %al,(%rax)
 838:	10 00                	adc    %al,(%rax)
 83a:	00 00                	add    %al,(%rax)
 83c:	e4 00                	in     $0x0,%al
 83e:	00 00                	add    %al,(%rax)
 840:	90                   	nop
 841:	fe                   	(bad)  
 842:	ff                   	(bad)  
 843:	ff 02                	incl   (%rdx)
 845:	00 00                	add    %al,(%rax)
 847:	00 00                	add    %al,(%rax)
 849:	00 00                	add    %al,(%rax)
	...

000000000000084c <__FRAME_END__>:
 84c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200df0 <__frame_dummy_init_array_entry>:
  200df0:	f0 05 00 00 00 00    	lock add $0x0,%eax
	...

Disassembly of section .fini_array:

0000000000200df8 <__do_global_dtors_aux_fini_array_entry>:
  200df8:	b0 05                	mov    $0x5,%al
  200dfa:	00 00                	add    %al,(%rax)
  200dfc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000200e00 <_DYNAMIC>:
  200e00:	01 00                	add    %eax,(%rax)
  200e02:	00 00                	add    %al,(%rax)
  200e04:	00 00                	add    %al,(%rax)
  200e06:	00 00                	add    %al,(%rax)
  200e08:	01 00                	add    %eax,(%rax)
  200e0a:	00 00                	add    %al,(%rax)
  200e0c:	00 00                	add    %al,(%rax)
  200e0e:	00 00                	add    %al,(%rax)
  200e10:	0c 00                	or     $0x0,%al
  200e12:	00 00                	add    %al,(%rax)
  200e14:	00 00                	add    %al,(%rax)
  200e16:	00 00                	add    %al,(%rax)
  200e18:	b8 04 00 00 00       	mov    $0x4,%eax
  200e1d:	00 00                	add    %al,(%rax)
  200e1f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 200e25 <_DYNAMIC+0x25>
  200e25:	00 00                	add    %al,(%rax)
  200e27:	00 d4                	add    %dl,%ah
  200e29:	06                   	(bad)  
  200e2a:	00 00                	add    %al,(%rax)
  200e2c:	00 00                	add    %al,(%rax)
  200e2e:	00 00                	add    %al,(%rax)
  200e30:	19 00                	sbb    %eax,(%rax)
  200e32:	00 00                	add    %al,(%rax)
  200e34:	00 00                	add    %al,(%rax)
  200e36:	00 00                	add    %al,(%rax)
  200e38:	f0 0d 20 00 00 00    	lock or $0x20,%eax
  200e3e:	00 00                	add    %al,(%rax)
  200e40:	1b 00                	sbb    (%rax),%eax
  200e42:	00 00                	add    %al,(%rax)
  200e44:	00 00                	add    %al,(%rax)
  200e46:	00 00                	add    %al,(%rax)
  200e48:	08 00                	or     %al,(%rax)
  200e4a:	00 00                	add    %al,(%rax)
  200e4c:	00 00                	add    %al,(%rax)
  200e4e:	00 00                	add    %al,(%rax)
  200e50:	1a 00                	sbb    (%rax),%al
  200e52:	00 00                	add    %al,(%rax)
  200e54:	00 00                	add    %al,(%rax)
  200e56:	00 00                	add    %al,(%rax)
  200e58:	f8                   	clc    
  200e59:	0d 20 00 00 00       	or     $0x20,%eax
  200e5e:	00 00                	add    %al,(%rax)
  200e60:	1c 00                	sbb    $0x0,%al
  200e62:	00 00                	add    %al,(%rax)
  200e64:	00 00                	add    %al,(%rax)
  200e66:	00 00                	add    %al,(%rax)
  200e68:	08 00                	or     %al,(%rax)
  200e6a:	00 00                	add    %al,(%rax)
  200e6c:	00 00                	add    %al,(%rax)
  200e6e:	00 00                	add    %al,(%rax)
  200e70:	f5                   	cmc    
  200e71:	fe                   	(bad)  
  200e72:	ff 6f 00             	ljmp   *0x0(%rdi)
  200e75:	00 00                	add    %al,(%rax)
  200e77:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  200e7d:	00 00                	add    %al,(%rax)
  200e7f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200e85 <_DYNAMIC+0x85>
  200e85:	00 00                	add    %al,(%rax)
  200e87:	00 48 03             	add    %cl,0x3(%rax)
  200e8a:	00 00                	add    %al,(%rax)
  200e8c:	00 00                	add    %al,(%rax)
  200e8e:	00 00                	add    %al,(%rax)
  200e90:	06                   	(bad)  
  200e91:	00 00                	add    %al,(%rax)
  200e93:	00 00                	add    %al,(%rax)
  200e95:	00 00                	add    %al,(%rax)
  200e97:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  200e9d:	00 00                	add    %al,(%rax)
  200e9f:	00 0a                	add    %cl,(%rdx)
  200ea1:	00 00                	add    %al,(%rax)
  200ea3:	00 00                	add    %al,(%rax)
  200ea5:	00 00                	add    %al,(%rax)
  200ea7:	00 7d 00             	add    %bh,0x0(%rbp)
  200eaa:	00 00                	add    %al,(%rax)
  200eac:	00 00                	add    %al,(%rax)
  200eae:	00 00                	add    %al,(%rax)
  200eb0:	0b 00                	or     (%rax),%eax
  200eb2:	00 00                	add    %al,(%rax)
  200eb4:	00 00                	add    %al,(%rax)
  200eb6:	00 00                	add    %al,(%rax)
  200eb8:	18 00                	sbb    %al,(%rax)
  200eba:	00 00                	add    %al,(%rax)
  200ebc:	00 00                	add    %al,(%rax)
  200ebe:	00 00                	add    %al,(%rax)
  200ec0:	15 00 00 00 00       	adc    $0x0,%eax
	...
  200ecd:	00 00                	add    %al,(%rax)
  200ecf:	00 03                	add    %al,(%rbx)
  200ed1:	00 00                	add    %al,(%rax)
  200ed3:	00 00                	add    %al,(%rax)
  200ed5:	00 00                	add    %al,(%rax)
  200ed7:	00 c0                	add    %al,%al
  200ed9:	0f 20 00             	mov    %cr0,%rax
  200edc:	00 00                	add    %al,(%rax)
  200ede:	00 00                	add    %al,(%rax)
  200ee0:	07                   	(bad)  
  200ee1:	00 00                	add    %al,(%rax)
  200ee3:	00 00                	add    %al,(%rax)
  200ee5:	00 00                	add    %al,(%rax)
  200ee7:	00 f8                	add    %bh,%al
  200ee9:	03 00                	add    (%rax),%eax
  200eeb:	00 00                	add    %al,(%rax)
  200eed:	00 00                	add    %al,(%rax)
  200eef:	00 08                	add    %cl,(%rax)
  200ef1:	00 00                	add    %al,(%rax)
  200ef3:	00 00                	add    %al,(%rax)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 c0                	add    %al,%al
  200ef9:	00 00                	add    %al,(%rax)
  200efb:	00 00                	add    %al,(%rax)
  200efd:	00 00                	add    %al,(%rax)
  200eff:	00 09                	add    %cl,(%rcx)
  200f01:	00 00                	add    %al,(%rax)
  200f03:	00 00                	add    %al,(%rax)
  200f05:	00 00                	add    %al,(%rax)
  200f07:	00 18                	add    %bl,(%rax)
  200f09:	00 00                	add    %al,(%rax)
  200f0b:	00 00                	add    %al,(%rax)
  200f0d:	00 00                	add    %al,(%rax)
  200f0f:	00 1e                	add    %bl,(%rsi)
  200f11:	00 00                	add    %al,(%rax)
  200f13:	00 00                	add    %al,(%rax)
  200f15:	00 00                	add    %al,(%rax)
  200f17:	00 08                	add    %cl,(%rax)
  200f19:	00 00                	add    %al,(%rax)
  200f1b:	00 00                	add    %al,(%rax)
  200f1d:	00 00                	add    %al,(%rax)
  200f1f:	00 fb                	add    %bh,%bl
  200f21:	ff                   	(bad)  
  200f22:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 01                	add    %al,(%rcx)
  200f29:	00 00                	add    %al,(%rax)
  200f2b:	08 00                	or     %al,(%rax)
  200f2d:	00 00                	add    %al,(%rax)
  200f2f:	00 fe                	add    %bh,%dh
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f35:	00 00                	add    %al,(%rax)
  200f37:	00 d8                	add    %bl,%al
  200f39:	03 00                	add    (%rax),%eax
  200f3b:	00 00                	add    %al,(%rax)
  200f3d:	00 00                	add    %al,(%rax)
  200f3f:	00 ff                	add    %bh,%bh
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f45:	00 00                	add    %al,(%rax)
  200f47:	00 01                	add    %al,(%rcx)
  200f49:	00 00                	add    %al,(%rax)
  200f4b:	00 00                	add    %al,(%rax)
  200f4d:	00 00                	add    %al,(%rax)
  200f4f:	00 f0                	add    %dh,%al
  200f51:	ff                   	(bad)  
  200f52:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f55:	00 00                	add    %al,(%rax)
  200f57:	00 c6                	add    %al,%dh
  200f59:	03 00                	add    (%rax),%eax
  200f5b:	00 00                	add    %al,(%rax)
  200f5d:	00 00                	add    %al,(%rax)
  200f5f:	00 f9                	add    %bh,%cl
  200f61:	ff                   	(bad)  
  200f62:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f65:	00 00                	add    %al,(%rax)
  200f67:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000200fc0 <_GLOBAL_OFFSET_TABLE_>:
  200fc0:	00 0e                	add    %cl,(%rsi)
  200fc2:	20 00                	and    %al,(%rax)
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     %dl,(%rax)
  20100a:	20 00                	and    %al,(%rax)
  20100c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x440>
   a:	74 75                	je     81 <_init-0x437>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75426530>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x429>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 37                	and    %dh,(%rdi)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	fa                   	cli    
  11:	05 00 00 00 00       	add    $0x0,%eax
  16:	00 00                	add    %al,(%rax)
  18:	5a                   	pop    %rdx
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
   0:	a3 00 00 00 04 00 00 	movabs %eax,0x4000000
   7:	00 00 
   9:	00 08                	add    %cl,(%rax)
   b:	01 35 00 00 00 0c    	add    %esi,0xc000000(%rip)        # c000011 <_end+0xbdfeff9>
  11:	7c 00                	jl     13 <_init-0x4a5>
  13:	00 00                	add    %al,(%rax)
  15:	06                   	(bad)  
  16:	00 00                	add    %al,(%rax)
  18:	00 fa                	add    %bh,%dl
  1a:	05 00 00 00 00       	add    $0x0,%eax
  1f:	00 00                	add    %al,(%rax)
  21:	5a                   	pop    %rdx
	...
  2a:	00 00                	add    %al,(%rax)
  2c:	00 02                	add    %al,(%rdx)
  2e:	83 00 00             	addl   $0x0,(%rax)
  31:	00 01                	add    %al,(%rcx)
  33:	06                   	(bad)  
  34:	69 00 00 00 0e 06    	imul   $0x60e0000,(%rax),%eax
  3a:	00 00                	add    %al,(%rax)
  3c:	00 00                	add    %al,(%rax)
  3e:	00 00                	add    %al,(%rax)
  40:	46 00 00             	rex.RX add %r8b,(%rax)
  43:	00 00                	add    %al,(%rax)
  45:	00 00                	add    %al,(%rax)
  47:	00 01                	add    %al,(%rcx)
  49:	9c                   	pushfq 
  4a:	69 00 00 00 03 69    	imul   $0x69030000,(%rax),%eax
  50:	00 01                	add    %al,(%rcx)
  52:	08 69 00             	or     %ch,0x0(%rcx)
  55:	00 00                	add    %al,(%rax)
  57:	02 91 68 03 72 65    	add    0x65720368(%rcx),%dl
  5d:	74 00                	je     5f <_init-0x459>
  5f:	01 09                	add    %ecx,(%rcx)
  61:	69 00 00 00 02 91    	imul   $0x91020000,(%rax),%eax
  67:	6c                   	insb   (%dx),%es:(%rdi)
  68:	00 04 04             	add    %al,(%rsp,%rax,1)
  6b:	05 69 6e 74 00       	add    $0x746e69,%eax
  70:	05 00 00 00 00       	add    $0x0,%eax
  75:	01 01                	add    %eax,(%rcx)
  77:	69 00 00 00 fa 05    	imul   $0x5fa0000,(%rax),%eax
  7d:	00 00                	add    %al,(%rax)
  7f:	00 00                	add    %al,(%rax)
  81:	00 00                	add    %al,(%rax)
  83:	14 00                	adc    $0x0,%al
  85:	00 00                	add    %al,(%rax)
  87:	00 00                	add    %al,(%rax)
  89:	00 00                	add    %al,(%rax)
  8b:	01 9c 06 61 00 01 01 	add    %ebx,0x1010061(%rsi,%rax,1)
  92:	69 00 00 00 02 91    	imul   $0x91020000,(%rax),%eax
  98:	6c                   	insb   (%dx),%es:(%rdi)
  99:	06                   	(bad)  
  9a:	62                   	(bad)  
  9b:	00 01                	add    %al,(%rcx)
  9d:	01 69 00             	add    %ebp,0x0(%rcx)
  a0:	00 00                	add    %al,(%rax)
  a2:	02                   	.byte 0x2
  a3:	91                   	xchg   %eax,%ecx
  a4:	68                   	.byte 0x68
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1316 <_end+0x2eb02fe>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	11 01                	adc    %eax,(%rcx)
   d:	12 07                	adc    (%rdi),%al
   f:	10 17                	adc    %dl,(%rdi)
  11:	00 00                	add    %al,(%rax)
  13:	02 2e                	add    (%rsi),%ch
  15:	01 3f                	add    %edi,(%rdi)
  17:	19 03                	sbb    %eax,(%rbx)
  19:	0e                   	(bad)  
  1a:	3a 0b                	cmp    (%rbx),%cl
  1c:	3b 0b                	cmp    (%rbx),%ecx
  1e:	49 13 11             	adc    (%r9),%rdx
  21:	01 12                	add    %edx,(%rdx)
  23:	07                   	(bad)  
  24:	40 18 96 42 19 01 13 	sbb    %dl,0x13011942(%rsi)
  2b:	00 00                	add    %al,(%rax)
  2d:	03 34 00             	add    (%rax,%rax,1),%esi
  30:	03 08                	add    (%rax),%ecx
  32:	3a 0b                	cmp    (%rbx),%cl
  34:	3b 0b                	cmp    (%rbx),%ecx
  36:	49 13 02             	adc    (%r10),%rax
  39:	18 00                	sbb    %al,(%rax)
  3b:	00 04 24             	add    %al,(%rsp)
  3e:	00 0b                	add    %cl,(%rbx)
  40:	0b 3e                	or     (%rsi),%edi
  42:	0b 03                	or     (%rbx),%eax
  44:	08 00                	or     %al,(%rax)
  46:	00 05 2e 01 3f 19    	add    %al,0x193f012e(%rip)        # 193f017a <_end+0x191ef162>
  4c:	03 0e                	add    (%rsi),%ecx
  4e:	3a 0b                	cmp    (%rbx),%cl
  50:	3b 0b                	cmp    (%rbx),%ecx
  52:	27                   	(bad)  
  53:	19 49 13             	sbb    %ecx,0x13(%rcx)
  56:	11 01                	adc    %eax,(%rcx)
  58:	12 07                	adc    (%rdi),%al
  5a:	40 18 97 42 19 00 00 	sbb    %dl,0x1942(%rdi)
  61:	06                   	(bad)  
  62:	05 00 03 08 3a       	add    $0x3a080300,%eax
  67:	0b 3b                	or     (%rbx),%edi
  69:	0b 49 13             	or     0x13(%rcx),%ecx
  6c:	02 18                	add    (%rax),%bl
  6e:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	4e 00 00             	rex.WRX add %r8b,(%rax)
   3:	00 02                	add    %al,(%rdx)
   5:	00 1d 00 00 00 01    	add    %bl,0x1000000(%rip)        # 100000b <_end+0xdfeff3>
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	00 6d 61             	add    %ch,0x61(%rbp)
  1e:	69 6e 2e 63 00 00 00 	imul   $0x63,0x2e(%rsi),%ebp
  25:	00 00                	add    %al,(%rax)
  27:	00 09                	add    %cl,(%rcx)
  29:	02 fa                	add    %dl,%bh
  2b:	05 00 00 00 00       	add    $0x0,%eax
  30:	00 00                	add    %al,(%rax)
  32:	13 9f 83 31 83 75    	adc    0x75833183(%rdi),%ebx
  38:	76 00                	jbe    3a <_init-0x47e>
  3a:	02 04 03             	add    (%rbx,%rax,1),%al
  3d:	92                   	xchg   %eax,%edx
  3e:	00 02                	add    %al,(%rdx)
  40:	04 03                	add    $0x3,%al
  42:	08 72 00             	or     %dh,0x0(%rdx)
  45:	02 04 01             	add    (%rcx,%rax,1),%al
  48:	06                   	(bad)  
  49:	4a 06                	rex.WX (bad) 
  4b:	6b 3d 02 02 00 01 01 	imul   $0x1,0x1000202(%rip),%edi        # 1000254 <_end+0xdff23c>

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
   0:	74 65                	je     67 <_init-0x451>
   2:	73 74                	jae    78 <_init-0x440>
   4:	31 00                	xor    %eax,(%rax)
   6:	2f                   	(bad)  
   7:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
   c:	66 71 76             	data16 jno 85 <_init-0x433>
   f:	31 39                	xor    %edi,(%rcx)
  11:	38 32                	cmp    %dh,(%rdx)
  13:	2f                   	(bad)  
  14:	50                   	push   %rax
  15:	72 6f                	jb     86 <_init-0x432>
  17:	6a 65                	pushq  $0x65
  19:	63 74 73 2f          	movslq 0x2f(%rbx,%rsi,2),%esi
  1d:	72 6f                	jb     8e <_init-0x42a>
  1f:	70 6c                	jo     8d <_init-0x42b>
  21:	2d 62 61 63 6b       	sub    $0x6b636162,%eax
  26:	65 6e                	outsb  %gs:(%rsi),(%dx)
  28:	64 2f                	fs (bad) 
  2a:	74 65                	je     91 <_init-0x427>
  2c:	73 74                	jae    a2 <_init-0x416>
  2e:	2f                   	(bad)  
  2f:	74 65                	je     96 <_init-0x422>
  31:	73 74                	jae    a7 <_init-0x411>
  33:	32 00                	xor    (%rax),%al
  35:	47                   	rex.RXB
  36:	4e 55                	rex.WRX push %rbp
  38:	20 43 31             	and    %al,0x31(%rbx)
  3b:	31 20                	xor    %esp,(%rax)
  3d:	37                   	(bad)  
  3e:	2e 34 2e             	cs xor $0x2e,%al
  41:	30 20                	xor    %ah,(%rax)
  43:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
  48:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
  4e:	72 69                	jb     b9 <_init-0x3ff>
  50:	63 20                	movslq (%rax),%esp
  52:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  57:	68 3d 78 38 36       	pushq  $0x3638783d
  5c:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
  61:	67 20 2d 66 73 74 61 	and    %ch,0x61747366(%eip)        # 617473ce <_end+0x615463b6>
  68:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
  6b:	70 72                	jo     df <_init-0x3d9>
  6d:	6f                   	outsl  %ds:(%rsi),(%dx)
  6e:	74 65                	je     d5 <_init-0x3e3>
  70:	63 74 6f 72          	movslq 0x72(%rdi,%rbp,2),%esi
  74:	2d 73 74 72 6f       	sub    $0x6f727473,%eax
  79:	6e                   	outsb  %ds:(%rsi),(%dx)
  7a:	67 00 6d 61          	add    %ch,0x61(%ebp)
  7e:	69 6e 2e 63 00 6d 61 	imul   $0x616d0063,0x2e(%rsi),%ebp
  85:	69                   	.byte 0x69
  86:	6e                   	outsb  %ds:(%rsi),(%dx)
	...
