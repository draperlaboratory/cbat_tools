digraph "main" {
node[shape=box]
  "%00000108"[label="%00000108
00000109: v159 := RBP\l0000010a: RSP := RSP - 8\l0000010b: mem := mem with [RSP, el]:u64 <- v159\l0000010c: RBP := RSP\l0000010e: RSP := RSP - 0x10\l00000115: RDI := 0xA\l00000116: RSP := RSP - 8\l00000117: mem := mem with [RSP, el]:u64 <- 0x6AC\l00000118: call @malloc with return %00000119\l"]
  "%00000119"[label="%00000119
0000011a: mem := mem with [RBP + 0xFFFFFFFFFFFFFFF8, el]:u64 <- RAX\l0000011b: v127 := mem[RBP + 0xFFFFFFFFFFFFFFF8, el]:u64\l00000121: ZF := 0 = v127\l"]
  "%00000122"[label="%00000122
"]
  "%00000123"[label="%00000123
"]
  "%00000129"[label="%00000129
0000012a: RCX := 0x78F\l0000012b: RDX := 0xA\l0000012c: RSI := 0x784\l0000012d: RDI := 0x78D\l0000012e: RSP := RSP - 8\l0000012f: mem := mem with [RSP, el]:u64 <- 0x6D6\l00000130: call @__assert_fail with return %00000131\l"]
  "%00000131"[label="%00000131
00000132: RAX := mem[RBP + 0xFFFFFFFFFFFFFFF8, el]:u64\l00000134: RAX := RAX + 3\l0000013b: mem := mem with [RAX] <- 0\l0000013c: RAX := mem[RBP + 0xFFFFFFFFFFFFFFF8, el]:u64\l0000013e: RAX := RAX + 3\l00000145: RAX := pad:64[pad:32[mem[RAX]]]\l00000146: RAX := pad:64[extend:32[low:8[low:32[RAX]]]]\l00000147: RSP := RBP\l00000148: RBP := mem[RSP, el]:u64\l00000149: RSP := RSP + 8\l0000014a: v169 := mem[RSP, el]:u64\l0000014b: RSP := RSP + 8\l0000014c: return v169\l"]
  "%00000108" -> "%00000119"
  "%00000119" -> "%00000122"[label="~ZF"]
  "%00000119" -> "%00000123"[label="ZF"]
  "%00000122" -> "%00000131"
  "%00000123" -> "%00000129"
  "%00000129" -> "%00000131"
}
